d1=d%>%
  mutate(across(c("proname","sex","stage","t","n","m","locprim","primres","locmet","treat","rec","prog","death","ps","kras","nras","allras","BRAFVal600Glu","neoadj","prevcanc"),as.factor))%>%
  mutate(recdate=as.POSIXlt(recdate,format="%d-%m-%Y"))%>%
  mutate(progdate=as.POSIXlt(progdate,format="%d-%m-%Y"))%>%
  mutate(deathdate=as.POSIXlt(deathdate,format="%d-%m-%Y"))%>%
  mutate(neoadjdate=as.POSIXlt(neoadjdate,format="%d-%m-%Y"))%>%
  mutate(prevcancdate=as.POSIXlt(prevcancdate,format="%d-%m-%Y"))%>%
  mutate(b1date=as.POSIXlt(b1date,format="%d-%m-%Y"))%>%
  mutate(fudate=as.POSIXlt(fudate,format="%d-%m-%Y"))%>%
  mutate(across(c("cea","il6","ykl40","ca199"),as.numeric))%>%
  mutate(cancwithin5=as.factor(cancwithin5))




dnew=d1%>%
  filter(is.na(neoadj))%>%
  filter(is.na(cancwithin5)|cancwithin5==0)%>%
  filter(is.na(exclude))%>%
  mutate(HAI1HAI2=as.factor(if_else(proname=="HAI1"|proname=="HAI2",1,0)))%>%
  mutate(BIORECRECCET=as.factor(if_else(proname=="BIOREC"|proname=="RECCET",1,0)))%>%
  mutate(ceahigh=as.factor(if_else(cea>5,"> 5 ng/ml",if_else(cea<5|cea==5,"</= 5 ng/mL",NA))))%>%
  mutate(ca199high=as.factor(if_else(ca199>37,"> 37 U/ml",if_else(ca199<37|ca199==37,"</= 37 U/mL",NA))))%>%
  mutate(log2cea=as.numeric(log(cea,2)))%>%
  mutate(log2ca199=as.numeric(log(ca199,2)))%>%
  mutate(side=as.factor(if_else(locprim==1|locprim==2|locprim==3|locprim==4|locprim==5|locprim==6, "Right",
                                if_else(locprim==7|locprim==8|locprim==9|locprim==10,"Left","Other"))))%>%
  mutate(prog=as.numeric(prog))%>%
  mutate(progdate=if_else(prog==1|is.na(prog)==T,deathdate,progdate))%>%
  mutate(progtime=as.numeric((difftime(progdate,b1date,units="days"))/365.24))%>%
  mutate(deathtime=as.numeric((difftime(deathdate,b1date,units="days"))/365.24))%>%
  mutate(death=as.numeric(death))%>%
  mutate(rec=as.numeric(rec))%>%
  mutate(prog=if_else(is.na(prog)==T&death==2,2,prog))%>%
  mutate(recdate=if_else(rec==1&death==2&deathtime<5,deathdate,recdate))%>%
  mutate(rec=if_else(rec==1&recdate==deathdate,2,rec))%>%
  mutate(nelevated=as.factor(if_else(cea>5&ca199>37,"2 elevated markers",if_else(cea>5|ca199>37,"1 elevated marker","0 elevated markers"))))%>%
  mutate(rectime=as.numeric((difftime(recdate,b1date,units="days"))/365.24))

write.csv2(dnew,"pfsrfscheck.csv")
table(dnew$nelevated[dnew$proname=="HAI2"])
table(dnew$rec[dnew$proname=="REBECCA"])
#Rebecca RFS dataset (ej fÃ¦rdig med recurrence variabel!!)
rebdnew=dnew%>%
  filter(proname=="REBECCA")%>%
  mutate(rec=if_else(is.na(rec)==T,1,rec))%>%
  mutate(recdate=if_else(rec==1&death==2&deathtime<5,deathdate,recdate))%>%
  mutate(recdate=if_else(is.na(recdate)&rec==1,b1date+dyears(5),recdate))%>%
  mutate(rectime=as.numeric((difftime(recdate,b1date,units="days"))/365.24))%>%
  mutate(recdate=if_else(rectime>5,b1date+dyears(5),recdate)) %>% 
  mutate(rectime=as.numeric((difftime(recdate,b1date,units="days"))/365.24))
  



length(rebdnew$rectime[rebdnew$rec==1])
#write.csv2(rebdnew,"rebecca_pfsrfscheck.csv")
table(rebdnew$rec)
#BIOREC dataset

biorec=dnew%>%
  filter(proname=="BIOREC"&is.na(ceahigh)==F)
#write.csv2(biorec,"biorec.csv")
#Check for NA's
nacheck=dnew%>%
  filter(is.na(cea)|is.na(ca199))

#Create dataset for BIOREC+RECCET
drectal=dnew%>%
  filter(BIORECRECCET==1)
#Create dataset for HAI 1 + 2
dhai=dnew%>%
  filter(HAI1HAI2==1)


#Create correlogram
corbigica199=dnew%>%
  select(age,log2cea,log2ca199,ps,kras)%>%
  filter(!is.na(kras))%>%
  filter(!is.na(ps))%>%
  filter(!is.na(log2cea))%>%
  filter(!is.na(log2ca199))%>%
  mutate(ps=as.numeric(ps))%>%
  mutate(kras=as.numeric(kras))

corbigica199spearm<-cor(corbigica199, method="s")
p.matcorbigica199<-cor_pmat(corbigica199,method="s")
corbigica199spearm

corrplotbigica199<-myggcorrplot(corbigica199spearm,
                            type="lower",
                            lab=T,
                            ggtheme = ggplot2::theme_classic,
                            lab_size = 3,
                            method="square",
                            p.mat=p.matcorbigica199,
                            insig="blank",
                            lab.notsig = "NS",tl.cex=10)
corrplotbigica199



#Kaplan-Meier for whole cohort PFS


survbigi<-survfit(Surv(deathtime,death)~1,data.frame(dnew))
survbigi
#KM HAI 1 PFS
hai1pfs<-survfit(Surv(progtime,prog)~1,data=subset(dnew,proname=="HAI1"))
#KM HAI 1 PFS CEA
hai1pfscea<-survfit(Surv(progtime,prog)~ceahigh,data=subset(dnew,proname=="HAI1"))
hai1pfskmcea<-ggsurvplot(hai1pfscea, data=dnew,risk.table = T,risk.table.title="Strata",
                         title="Progression-free survival in HAI 1",xlab="Time (years)",
                         ylab="Progression-free survival probability",
                         legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"))
hai1pfskmcea

#KM HAI 1 PFS CA199
hai1pfsca199<-survfit(Surv(progtime,prog)~ca199high,data=subset(dnew,proname=="HAI1"))
hai1pfskmca199<-ggsurvplot(hai1pfsca199, data=dnew,risk.table = T,risk.table.title="Strata",
                           title="Progression-free survival in HAI 1",xlab="Time (years)",
                           ylab="Progression-free survival probability",
                           legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"))
hai1pfskmca199

#KM HAI 1 PFS N elevated
hai1pfsnele<-survfit(Surv(progtime,prog)~nelevated,data=subset(dnew,proname=="HAI1"))
hai1pfskmnele<-ggsurvplot(hai1pfsnele, data=dnew,risk.table = T,risk.table.title="Strata",
                          title="Progression-free survival in HAI 1",xlab="Time (years)",
                          ylab="Progression-free survival probability",
                          legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"))
hai1pfskmnele

#KM HAI 1 OS
hai1os<-survfit(Surv(deathtime,death)~1,data=subset(dnew,proname=="HAI1"))
hai1os
#KM HAI 1 OS CEA
hai1oscea<-survfit(Surv(deathtime,death)~ceahigh,data=subset(dnew,proname=="HAI1"))
hai1oskmcea<-ggsurvplot(hai1oscea, data=dnew,risk.table = T,risk.table.title="Strata",
                        title="Overall survival in HAI 1",xlab="Time (years)",
                        ylab="Overall survival probability",
                        legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"))
hai1oskmcea

#KM HAI 1 OS CA199
hai1osca199<-survfit(Surv(deathtime,death)~ca199high,data=subset(dnew,proname=="HAI1"))
hai1oskmca199<-ggsurvplot(hai1osca199, data=dnew,risk.table = T,risk.table.title="Strata",
                          title="Overall survival in HAI 1",xlab="Time (years)",
                          ylab="Overall survival probability",
                          legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"))
hai1oskmca199

#KM HAI 1 OS N elevated
hai1osnele<-survfit(Surv(deathtime,death)~nelevated,data=subset(dnew,proname=="HAI1"))
hai1oskmnele<-ggsurvplot(hai1osnele, data=dnew,risk.table = T,risk.table.title="Strata",
                         title="Overall survival in HAI 1",xlab="Time (years)",
                         ylab="Overall survival probability",
                         legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"))
hai1oskmnele

#All HAI 1

hai1km <- list()
hai1km[[1]] <- ggsurvplot(hai1pfscea, data=dnew,risk.table = T,risk.table.title="Strata",
                          title="Progression-free survival in HAI 1",xlab="Time (years)",
                          ylab="Progression-free survival probability",
                          legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"))
hai1km[[2]] <- ggsurvplot(hai1pfsca199, data=dnew,risk.table = T,risk.table.title="Strata",
                          title="Progression-free survival in HAI 1",xlab="Time (years)",
                          ylab="Progression-free survival probability",
                          legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"))
hai1km[[3]] <- ggsurvplot(hai1pfsnele, data=dnew,risk.table = T,risk.table.title="Strata",
                          title="Progression-free survival in HAI 1",xlab="Time (years)",
                          ylab="Progression-free survival probability",
                          legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"))
hai1km[[4]] <- ggsurvplot(hai1oscea, data=dnew,risk.table = T,risk.table.title="Strata",
                          title="Overall survival in HAI 1",xlab="Time (years)",
                          ylab="Overall survival probability",
                          legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"))
hai1km[[5]] <- ggsurvplot(hai1osca199, data=dnew,risk.table = T,risk.table.title="Strata",
                          title="Overall survival in HAI 1",xlab="Time (years)",
                          ylab="Overall survival probability",
                          legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"))
hai1km[[6]] <- ggsurvplot(hai1osnele, data=dnew,risk.table = T,risk.table.title="Strata",
                          title="Overall survival in HAI 1",xlab="Time (years)",
                          ylab="Overall survival probability",
                          legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"))
hai1kmplot<-arrange_ggsurvplots(hai1km, print = TRUE,
                    ncol = 2, nrow = 3, risk.table.height = 0.4)

#KM HAI 2 PFS
hai2pfs<-survfit(Surv(progtime,prog)~1,data=subset(dnew,proname=="HAI2"))
hai2pfs
#KM HAI 2 PFS CEA
hai2pfscea<-survfit(Surv(progtime,prog)~ceahigh,data=subset(dnew,proname=="HAI2"))
hai2pfskmcea<-ggsurvplot(hai2pfscea, data=dnew,risk.table = T,risk.table.title="Strata",
                         title="Progression-free survival in HAI 2",xlab="Time (years)",
                         ylab="Progression-free survival probability",
                         legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"))
hai2pfskmcea

#KM HAI 2 PFS CA199
hai2pfsca199<-survfit(Surv(progtime,prog)~ca199high,data=subset(dnew,proname=="HAI2"))
hai2pfskmca199<-ggsurvplot(hai2pfsca199, data=dnew,risk.table = T,risk.table.title="Strata",
                           title="Progression-free survival in HAI 2",xlab="Time (years)",
                           ylab="Progression-free survival probability",
                           legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"))
hai2pfskmca199

#KM HAI 2 PFS N elevated
hai2pfsnele<-survfit(Surv(progtime,prog)~nelevated,data=subset(dnew,proname=="HAI2"))
hai2pfskmnele<-ggsurvplot(hai2pfsnele, data=dnew,risk.table = T,risk.table.title="Strata",
                          title="Progression-free survival in HAI 2",xlab="Time (years)",
                          ylab="Progression-free survival probability",
                          legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"))
hai2pfskmnele

#KM HAI 2 OS
hai2os<-survfit(Surv(deathtime,death)~1,data=subset(dnew,proname=="HAI2"))
hai2os
#KM HAI 2 OS CEA
hai2oscea<-survfit(Surv(deathtime,death)~ceahigh,data=subset(dnew,proname=="HAI2"))
hai2oskmcea<-ggsurvplot(hai2oscea, data=dnew,risk.table = T,risk.table.title="Strata",
                        title="Overall survival in HAI 2",xlab="Time (years)",
                        ylab="Overall survival probability",
                        legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"))
hai2oskmcea

#KM HAI 2 OS CA199
hai2osca199<-survfit(Surv(deathtime,death)~ca199high,data=subset(dnew,proname=="HAI2"))
hai2oskmca199<-ggsurvplot(hai2osca199, data=dnew,risk.table = T,risk.table.title="Strata",
                          title="Overall survival in HAI 2",xlab="Time (years)",
                          ylab="Overall survival probability",
                          legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"))
hai2oskmca199

#KM HAI 2 OS N elevated
hai2osnele<-survfit(Surv(deathtime,death)~nelevated,data=subset(dnew,proname=="HAI2"))
hai2oskmnele<-ggsurvplot(hai2osnele, data=dnew,risk.table = T,risk.table.title="Strata",
                         title="Overall survival in HAI 2",xlab="Time (years)",
                         ylab="Overall survival probability",
                         legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"))
hai2oskmnele

#KM HAI 1+2
hai12pfs<-survfit(Surv(progtime,prog)~1,data=dhai)
hai12pfs
#KM HAI 1+2 PFS CEA
hai12pfscea<-survfit(Surv(progtime,prog)~ceahigh,data=dhai)
hai12pfskmcea<-ggsurvplot(hai12pfscea, data=dnew,risk.table = T,risk.table.title="Strata",
                         title="Progression-free survival in HAI 1+2",xlab="Time (years)",
                         ylab="Progression-free survival probability",
                         legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"))
hai12pfskmcea

#KM HAI 1+2 PFS CA199
hai12pfsca199<-survfit(Surv(progtime,prog)~ca199high,data=dhai)
hai12pfskmca199<-ggsurvplot(hai12pfsca199, data=dnew,risk.table = T,risk.table.title="Strata",
                           title="Progression-free survival in HAI 1+2",xlab="Time (years)",
                           ylab="Progression-free survival probability",
                           legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"))
hai12pfskmca199

#KM HAI 1+2 PFS N elevated
hai12pfsnele<-survfit(Surv(progtime,prog)~nelevated,data=dhai)
hai12pfskmnele<-ggsurvplot(hai12pfsnele, data=dnew,risk.table = T,risk.table.title="Strata",
                          title="Progression-free survival in HAI 1+2",xlab="Time (years)",
                          ylab="Progression-free survival probability",
                          legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"))
hai12pfskmnele

#KM HAI 1+2 OS
hai12os<-survfit(Surv(deathtime,death)~1,data=dhai)
hai12os
#KM HAI 1+2 OS CEA
hai12oscea<-survfit(Surv(deathtime,death)~ceahigh,data=dhai)
hai12oskmcea<-ggsurvplot(hai12oscea, data=dnew,risk.table = T,risk.table.title="Strata",
                        title="Overall survival in HAI 1+2",xlab="Time (years)",
                        ylab="Overall survival probability",
                        legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"))
hai12oskmcea

#KM HAI 1+2 OS CA199
hai12osca199<-survfit(Surv(deathtime,death)~ca199high,data=dhai)
hai12oskmca199<-ggsurvplot(hai12osca199, data=dnew,risk.table = T,risk.table.title="Strata",
                          title="Overall survival in HAI 1+2",xlab="Time (years)",
                          ylab="Overall survival probability",
                          legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"))
hai12oskmca199

#KM HAI 1+2 OS N elevated
hai12osnele<-survfit(Surv(deathtime,death)~nelevated,data=dhai)
hai12oskmnele<-ggsurvplot(hai12osnele, data=dnew,risk.table = T,risk.table.title="Strata",
                         title="Overall survival in HAI 1+2",xlab="Time (years)",
                         ylab="Overall survival probability",
                         legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"))
hai12oskmnele

#KM Biweekly PFS
biweeklypfs<-survfit(Surv(progtime,prog)~1,data=subset(dnew,proname=="Biweekly"))
biweeklypfs
#KM Biweekly PFS CEA
biweeklypfscea<-survfit(Surv(progtime,prog)~ceahigh,data=subset(dnew,proname=="Biweekly"))
biweeklypfskmcea<-ggsurvplot(biweeklypfscea, data=dnew,risk.table = T,risk.table.title="Strata",
                         title="Progression-free survival in Biweekly",xlab="Time (years)",
                         ylab="Progression-free survival probability",
                         legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"))
biweeklypfskmcea

#KM Biweekly PFS CA199
biweeklypfsca199<-survfit(Surv(progtime,prog)~ca199high,data=subset(dnew,proname=="Biweekly"))
biweeklypfskmca199<-ggsurvplot(biweeklypfsca199, data=dnew,risk.table = T,risk.table.title="Strata",
                           title="Progression-free survival in Biweekly",xlab="Time (months)",
                           ylab="Progression-free survival probability",
                           legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"))
biweeklypfskmca199

#KM Biweekly PFS N elevated
biweeklypfsnele<-survfit(Surv(progtime,prog)~nelevated,data=subset(dnew,proname=="Biweekly"))
biweeklypfskmnele<-ggsurvplot(biweeklypfsnele, data=dnew,risk.table = T,risk.table.title="Strata",
                          title="Progression-free survival in Biweekly",xlab="Time (months)",
                          ylab="Progression-free survival probability",
                          legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"))
biweeklypfskmnele

#KM Biweekly OS
biweeklyos<-survfit(Surv(deathtime,death)~1,data=subset(dnew,proname=="Biweekly"))
biweeklyos
#KM Biweekly OS CEA
biweeklyoscea<-survfit(Surv(deathtime,death)~ceahigh,data=subset(dnew,proname=="Biweekly"))
biweeklyoskmcea<-ggsurvplot(biweeklyoscea, data=dnew,risk.table = T,risk.table.title="Strata",
                        title="Overall survival in Biweekly",xlab="Time (years)",
                        ylab="Overall survival probability",
                        legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"))
biweeklyoskmcea

#KM Biweekly OS CA199
biweeklyosca199<-survfit(Surv(deathtime,death)~ca199high,data=subset(dnew,proname=="Biweekly"))
biweeklyoskmca199<-ggsurvplot(biweeklyosca199, data=dnew,risk.table = T,risk.table.title="Strata",
                          title="Overall survival in Biweekly",xlab="Time (years)",
                          ylab="Overall survival probability",
                          legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"))
biweeklyoskmca199

#KM Biweekly OS N elevated
biweeklyosnele<-survfit(Surv(deathtime,death)~nelevated,data=subset(dnew,proname=="Biweekly"))
biweeklyoskmnele<-ggsurvplot(biweeklyosnele, data=dnew,risk.table = T,risk.table.title="Strata",
                         title="Overall survival in Biweekly",xlab="Time (years)",
                         ylab="Overall survival probability",
                         legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"))
biweeklyoskmnele

#KM XELOX PFS
xeloxpfs<-survfit(Surv(progtime,prog)~1,data=subset(dnew,proname=="XELOX"))
xeloxpfs
#KM XELOX PFS CEA
xeloxpfscea<-survfit(Surv(progtime,prog)~ceahigh,data=subset(dnew,proname=="XELOX"))
xeloxpfskmcea<-ggsurvplot(xeloxpfscea, data=dnew,risk.table = T,risk.table.title="Strata",
                             title="Progression-free survival in XELOX",xlab="Time (years)",
                             ylab="Progression-free survival probability",
                             legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"))
xeloxpfskmcea

#KM XELOX PFS CA199
xeloxpfsca199<-survfit(Surv(progtime,prog)~ca199high,data=subset(dnew,proname=="XELOX"))
xeloxpfskmca199<-ggsurvplot(xeloxpfsca199, data=dnew,risk.table = T,risk.table.title="Strata",
                               title="Progression-free survival in XELOX",xlab="Time (months)",
                               ylab="Progression-free survival probability",
                               legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"))
xeloxpfskmca199

#KM XELOX PFS N elevated
xeloxpfsnele<-survfit(Surv(progtime,prog)~nelevated,data=subset(dnew,proname=="XELOX"))
xeloxpfskmnele<-ggsurvplot(xeloxpfsnele, data=dnew,risk.table = T,risk.table.title="Strata",
                              title="Progression-free survival in XELOX",xlab="Time (months)",
                              ylab="Progression-free survival probability",
                              legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"))
xeloxpfskmnele

#KM XELOX OS
xeloxos<-survfit(Surv(deathtime,death)~1,data=subset(dnew,proname=="XELOX"))
xeloxos
#KM XELOX OS CEA
xeloxoscea<-survfit(Surv(deathtime,death)~ceahigh,data=subset(dnew,proname=="XELOX"))
xeloxoskmcea<-ggsurvplot(xeloxoscea, data=dnew,risk.table = T,risk.table.title="Strata",
                            title="Overall survival in XELOX",xlab="Time (years)",
                            ylab="Overall survival probability",
                            legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"))
xeloxoskmcea

#KM XELOX OS CA199
xeloxosca199<-survfit(Surv(deathtime,death)~ca199high,data=subset(dnew,proname=="XELOX"))
xeloxoskmca199<-ggsurvplot(xeloxosca199, data=dnew,risk.table = T,risk.table.title="Strata",
                              title="Overall survival in XELOX",xlab="Time (years)",
                              ylab="Overall survival probability",
                              legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"))
xeloxoskmca199

#KM XELOX OS N elevated
xeloxosnele<-survfit(Surv(deathtime,death)~nelevated,data=subset(dnew,proname=="XELOX"))
xeloxoskmnele<-ggsurvplot(xeloxosnele, data=dnew,risk.table = T,risk.table.title="Strata",
                             title="Overall survival in XELOX",xlab="Time (years)",
                             ylab="Overall survival probability",
                             legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"))
xeloxoskmnele


#KM ICE PFS
icepfs<-survfit(Surv(progtime,prog)~1,data=subset(dnew,proname=="ICE"))
icepfs
#KM ICE PFS CEA
icepfscea<-survfit(Surv(progtime,prog)~ceahigh,data=subset(dnew,proname=="ICE"))
icepfskmcea<-ggsurvplot(icepfscea, data=dnew,risk.table = T,risk.table.title="Strata",
                          title="Progression-free survival in ICE",xlab="Time (years)",
                          ylab="Progression-free survival probability",
                          legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"))
icepfskmcea

#KM ICE PFS CA199
icepfsca199<-survfit(Surv(progtime,prog)~ca199high,data=subset(dnew,proname=="ICE"))
icepfskmca199<-ggsurvplot(icepfsca199, data=dnew,risk.table = T,risk.table.title="Strata",
                            title="Progression-free survival in ICE",xlab="Time (months)",
                            ylab="Progression-free survival probability",
                            legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"))
icepfskmca199

#KM ICE PFS N elevated
icepfsnele<-survfit(Surv(progtime,prog)~nelevated,data=subset(dnew,proname=="ICE"))
icepfskmnele<-ggsurvplot(icepfsnele, data=dnew,risk.table = T,risk.table.title="Strata",
                           title="Progression-free survival in ICE",xlab="Time (months)",
                           ylab="Progression-free survival probability",
                           legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"))
icepfskmnele

#KM ICE OS
iceos<-survfit(Surv(deathtime,death)~1,data=subset(dnew,proname=="ICE"))
iceos
#KM ICE OS CEA
iceoscea<-survfit(Surv(deathtime,death)~ceahigh,data=subset(dnew,proname=="ICE"))
iceoskmcea<-ggsurvplot(iceoscea, data=dnew,risk.table = T,risk.table.title="Strata",
                         title="Overall survival in ICE",xlab="Time (years)",
                         ylab="Overall survival probability",
                         legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"))
iceoskmcea

#KM ICE OS CA199
iceosca199<-survfit(Surv(deathtime,death)~ca199high,data=subset(dnew,proname=="ICE"))
iceoskmca199<-ggsurvplot(iceosca199, data=dnew,risk.table = T,risk.table.title="Strata",
                           title="Overall survival in ICE",xlab="Time (years)",
                           ylab="Overall survival probability",
                           legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"))
iceoskmca199

#KM ICE OS N elevated
iceosnele<-survfit(Surv(deathtime,death)~nelevated,data=subset(dnew,proname=="ICE"))
iceoskmnele<-ggsurvplot(iceosnele, data=dnew,risk.table = T,risk.table.title="Strata",
                          title="Overall survival in ICE",xlab="Time (years)",
                          ylab="Overall survival probability",
                          legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"))
iceoskmnele


#KM BIOREC

#KM BIOREC RFS
biorecrfs<-survfit(Surv(rectime,rec)~1,data=subset(dnew,proname=="BIOREC"))
biorecrfs
#KM BIOREC RFS CEA
biorecrfscea<-survfit(Surv(rectime,rec)~ceahigh,data=subset(dnew,proname=="BIOREC"))
biorecrfskmcea<-ggsurvplot(biorecrfscea, data=dnew,risk.table = T,risk.table.title="Strata",
                        title="Recurrence-free survival in BIOREC",xlab="Time (years)",
                        ylab="Recurrence-free survival probability",
                        legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"))
biorecrfskmcea

#KM BIOREC RFS CA199
biorecrfsca199<-survfit(Surv(rectime,rec)~ca199high,data=subset(dnew,proname=="BIOREC"))
biorecrfskmca199<-ggsurvplot(biorecrfsca199, data=dnew,risk.table = T,risk.table.title="Strata",
                          title="Recurrence-free survival in BIOREC",xlab="Time (months)",
                          ylab="Recurrence-free survival probability",
                          legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"))
biorecrfskmca199

#KM BIOREC RFS N elevated
biorecrfsnele<-survfit(Surv(rectime,rec)~nelevated,data=subset(dnew,proname=="BIOREC"))
biorecrfskmnele<-ggsurvplot(biorecrfsnele, data=dnew,risk.table = T,risk.table.title="Strata",
                         title="Recurrence-free survival in BIOREC",xlab="Time (months)",
                         ylab="Recurrence-free survival probability",
                         legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"))
biorecrfskmnele

#KM BIOREC OS
biorecos<-survfit(Surv(deathtime,death)~1,data=subset(dnew,proname=="BIOREC"))
biorecos
#KM BIOREC OS CEA
biorecoscea<-survfit(Surv(deathtime,death)~ceahigh,data=subset(dnew,proname=="BIOREC"))
biorecoskmcea<-ggsurvplot(biorecoscea, data=dnew,risk.table = T,risk.table.title="Strata",
                       title="Overall survival in BIOREC",xlab="Time (years)",
                       ylab="Overall survival probability",
                       legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"))
biorecoskmcea

#KM BIOREC OS CA199
biorecosca199<-survfit(Surv(deathtime,death)~ca199high,data=subset(dnew,proname=="BIOREC"))
biorecoskmca199<-ggsurvplot(biorecosca199, data=dnew,risk.table = T,risk.table.title="Strata",
                         title="Overall survival in BIOREC",xlab="Time (years)",
                         ylab="Overall survival probability",
                         legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"))
biorecoskmca199

#KM BIOREC OS N elevated
biorecosnele<-survfit(Surv(deathtime,death)~nelevated,data=subset(dnew,proname=="BIOREC"))
biorecoskmnele<-ggsurvplot(biorecosnele, data=dnew,risk.table = T,risk.table.title="Strata",
                        title="Overall survival in BIOREC",xlab="Time (years)",
                        ylab="Overall survival probability",
                        legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"))
biorecoskmnele


#KM RECCET

#KM RECCET RFS CEA
reccetrfs<-survfit(Surv(rectime,rec)~1,data=subset(dnew,proname=="RECCET"))
reccetrfs
reccetrfscea<-survfit(Surv(rectime,rec)~ceahigh,data=subset(dnew,proname=="RECCET"))
reccetrfskmcea<-ggsurvplot(reccetrfscea, data=dnew,risk.table = T,risk.table.title="Strata",
                           title="Recurrence-free survival in RECCET",xlab="Time (years)",
                           ylab="Recurrence-free survival probability",
                           legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"))
reccetrfskmcea

#KM RECCET RFS CA199
reccetrfsca199<-survfit(Surv(rectime,rec)~ca199high,data=subset(dnew,proname=="RECCET"))
reccetrfskmca199<-ggsurvplot(reccetrfsca199, data=dnew,risk.table = T,risk.table.title="Strata",
                             title="Recurrence-free survival in RECCET",xlab="Time (months)",
                             ylab="Recurrence-free survival probability",
                             legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"))
reccetrfskmca199

#KM RECCET RFS N elevated
reccetrfsnele<-survfit(Surv(rectime,rec)~nelevated,data=subset(dnew,proname=="RECCET"))
reccetrfskmnele<-ggsurvplot(reccetrfsnele, data=dnew,risk.table = T,risk.table.title="Strata",
                            title="Recurrence-free survival in RECCET",xlab="Time (months)",
                            ylab="Recurrence-free survival probability",
                            legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"))
reccetrfskmnele

#KM RECCET OS
reccetos<-survfit(Surv(deathtime,death)~1,data=subset(dnew,proname=="RECCET"))
reccetos
#KM RECCET OS CEA
reccetoscea<-survfit(Surv(deathtime,death)~ceahigh,data=subset(dnew,proname=="RECCET"))
reccetoskmcea<-ggsurvplot(reccetoscea, data=dnew,risk.table = T,risk.table.title="Strata",
                          title="Overall survival in RECCET",xlab="Time (years)",
                          ylab="Overall survival probability",
                          legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"))
reccetoskmcea

#KM RECCET OS CA199
reccetosca199<-survfit(Surv(deathtime,death)~ca199high,data=subset(dnew,proname=="RECCET"))
reccetoskmca199<-ggsurvplot(reccetosca199, data=dnew,risk.table = T,risk.table.title="Strata",
                            title="Overall survival in RECCET",xlab="Time (years)",
                            ylab="Overall survival probability",
                            legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"))
reccetoskmca199

#KM RECCET OS N elevated
reccetosnele<-survfit(Surv(deathtime,death)~nelevated,data=subset(dnew,proname=="RECCET"))
reccetoskmnele<-ggsurvplot(reccetosnele, data=dnew,risk.table = T,risk.table.title="Strata",
                           title="Overall survival in RECCET",xlab="Time (years)",
                           ylab="Overall survival probability",
                           legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"))
reccetoskmnele


#KM BIOREC + RECCET

#KM BIOREC + RECCET RFS CEA
drectalrfs<-survfit(Surv(rectime,rec)~1,data=drectal)
drectalrfs
drectalrfscea<-survfit(Surv(rectime,rec)~ceahigh,data=drectal)
drectalrfskmcea<-ggsurvplot(drectalrfscea, data=drectal,risk.table = T,risk.table.title="Strata",
                           title="Recurrence-free survival in BIOREC + RECCET",xlab="Time (years)",
                           ylab="Recurrence-free survival probability",
                           legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"))
drectalrfskmcea

#KM BIOREC + RECCET RFS CA199
drectalrfsca199<-survfit(Surv(rectime,rec)~ca199high,data=drectal)
drectalrfskmca199<-ggsurvplot(drectalrfsca199, data=drectal,risk.table = T,risk.table.title="Strata",
                             title="Recurrence-free survival in BIOREC + RECCET",xlab="Time (months)",
                             ylab="Recurrence-free survival probability",
                             legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"))
drectalrfskmca199

#KM BIOREC + RECCET RFS N elevated
drectalrfsnele<-survfit(Surv(rectime,rec)~nelevated,data=drectal)
drectalrfskmnele<-ggsurvplot(drectalrfsnele, data=drectal,risk.table = T,risk.table.title="Strata",
                            title="Recurrence-free survival in BIOREC + RECCET",xlab="Time (months)",
                            ylab="Recurrence-free survival probability",
                            legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"))
drectalrfskmnele

#KM BIOREC + RECCET OS

#KM BIOREC + RECCET OS CEA
drectalos<-survfit(Surv(deathtime,death)~1,data=drectal)
drectalos
drectaloscea<-survfit(Surv(deathtime,death)~ceahigh,data=drectal)
drectaloskmcea<-ggsurvplot(drectaloscea, data=drectal,risk.table = T,risk.table.title="Strata",
                          title="Overall survival in BIOREC + RECCET",xlab="Time (years)",
                          ylab="Overall survival probability",
                          legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"))
drectaloskmcea

#KM BIOREC + RECCET OS CA199
drectalosca199<-survfit(Surv(deathtime,death)~ca199high,data=drectal)
drectaloskmca199<-ggsurvplot(drectalosca199, data=drectal,risk.table = T,risk.table.title="Strata",
                            title="Overall survival in BIOREC + RECCET",xlab="Time (years)",
                            ylab="Overall survival probability",
                            legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"))
drectaloskmca199

#KM BIOREC + RECCET OS N elevated
drectalosnele<-survfit(Surv(deathtime,death)~nelevated,data=drectal)
drectaloskmnele<-ggsurvplot(drectalosnele, data=drectal,risk.table = T,risk.table.title="Strata",
                           title="Overall survival in BIOREC + RECCET",xlab="Time (years)",
                           ylab="Overall survival probability",
                           legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"))
drectaloskmnele

#KM REBECCA

#KM REBECCA RFS CEA
rebeccarfs<-survfit(Surv(rectime,rec)~1,data=rebdnew)
rebeccarfs
rebeccarfscea<-survfit(Surv(rectime,rec)~ceahigh,data=rebdnew)
rebeccarfskmcea<-ggsurvplot(rebeccarfscea, data=rebdnew,risk.table = T,risk.table.title="Strata",
                           title="Recurrence-free survival in REBECCA",xlab="Time (years)",
                           ylab="Recurrence-free survival probability",
                           legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"))
rebeccarfskmcea

#KM REBECCA RFS CA199
rebeccarfsca199<-survfit(Surv(rectime,rec)~ca199high,data=rebdnew)
rebeccarfskmca199<-ggsurvplot(rebeccarfsca199, data=rebdnew,risk.table = T,risk.table.title="Strata",
                             title="Recurrence-free survival in REBECCA",xlab="Time (months)",
                             ylab="Recurrence-free survival probability",
                             legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"))
rebeccarfskmca199

#KM REBECCA RFS N elevated
rebeccarfsnele<-survfit(Surv(rectime,rec)~nelevated,data=rebdnew)
rebeccarfskmnele<-ggsurvplot(rebeccarfsnele, data=rebdnew,risk.table = T,risk.table.title="Strata",
                            title="Recurrence-free survival in REBECCA",xlab="Time (months)",
                            ylab="Recurrence-free survival probability",
                            legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"))
rebeccarfskmnele

#KM REBECCA OS

#Overall survival REBECCA OS
rebeccaos<-survfit(Surv(deathtime,death)~1,data=rebdnew)
rebeccaos
#KM REBECCA OS CEA
rebeccaoscea<-survfit(Surv(deathtime,death)~ceahigh,data=rebdnew)
rebeccaoskmcea<-ggsurvplot(rebeccaoscea, data=rebdnew,risk.table = T,risk.table.title="Strata",
                          title="Overall survival in REBECCA",xlab="Time (years)",
                          ylab="Overall survival probability",
                          legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"))
rebeccaoskmcea

#KM REBECCA OS CA199
rebeccaosca199<-survfit(Surv(deathtime,death)~ca199high,data=rebdnew)
rebeccaoskmca199<-ggsurvplot(rebeccaosca199, data=rebdnew,risk.table = T,risk.table.title="Strata",
                            title="Overall survival in REBECCA",xlab="Time (years)",
                            ylab="Overall survival probability",
                            legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"))
rebeccaoskmca199

#KM REBECCA OS N elevated
rebeccaosnele<-survfit(Surv(deathtime,death)~nelevated,data=rebdnew)
rebeccaoskmnele<-ggsurvplot(rebeccaosnele, data=rebdnew,risk.table = T,risk.table.title="Strata",
                           title="Overall survival in REBECCA",xlab="Time (years)",
                           ylab="Overall survival probability",
                           legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"))
rebeccaoskmnele






#Arrange plots for figures


#Figure 1 Stage III CEA CA199 OS
figure1km <- list()

figure1km[[1]] <- ggsurvplot(drectalosca199, data=dnew,risk.table = T,risk.table.title="Strata",
                             title="Overall survival in BIOREC + RECCET",xlab="Time (years)",
                             ylab="OS probability",
                             legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"),xlim=c(0,10),break.x.by=2)
figure1km[[3]] <- ggsurvplot(drectaloscea, data=dnew,risk.table = T,risk.table.title="Strata",
                             title="Overall survival in BIOREC + RECCET",xlab="Time (years)",
                             ylab="OS probability",
                             legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"),xlim=c(0,10),break.x.by=2)
figure1km[[2]] <- ggsurvplot(rebeccaosca199, data=dnew,risk.table = T,risk.table.title="Strata",
                             title="Overall survival in REBECCA",xlab="Time (years)",
                             ylab="OS probability",
                             legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"),break.x.by=2)
figure1km[[4]] <- ggsurvplot(rebeccaoscea, data=dnew,risk.table = T,risk.table.title="Strata",
                             title="Overall survival in REBECCA",xlab="Time (years)",
                             ylab="OS probability",
                             legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"),break.x.by=2)


fig1kmplot<-arrange_ggsurvplots(figure1km, surv.plot.height =0.75,print = TRUE,
                                ncol = 2, nrow = 2, risk.table.height = 0.2)

ggsave("plots/Figure 1.tiff", fig1kmplot,width = 40, height = 40, units = "cm")
ggsave("plots/Figure 1.pdf", fig1kmplot,width = 40, height = 40, units = "cm")
ggsave("plots/Figure 1.eps", fig1kmplot,width = 40, height = 40, units = "cm")

#Figure 2 Metastatic CEA CA199 OS
figure2km <- list()


figure2km[[2]] <- ggsurvplot(hai12osca199, data=dnew,risk.table = T,risk.table.title="Strata",
                             title="Overall survival in HAI 1+HAI 2",xlab="Time (years)",
                             ylab="OS probability",
                             legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"),xlim=c(0,5),break.x.by=1)
figure2km[[6]] <- ggsurvplot(hai12oscea, data=dnew,risk.table = T,risk.table.title="Strata",
                             title="Overall survival in HAI 1+HAI 2",xlab="Time (years)",
                             ylab="OS probability",
                             legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"),xlim=c(0,5),break.x.by=1)

figure2km[[3]] <- ggsurvplot(biweeklyosca199, data=dnew,risk.table = T,risk.table.title="Strata",
                             title="Overall survival in Biweekly",xlab="Time (years)",
                             ylab="OS probability",
                             legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"),xlim=c(0,3),break.x.by=1)
figure2km[[7]] <- ggsurvplot(biweeklyoscea, data=dnew,risk.table = T,risk.table.title="Strata",
                             title="Overall survival in Biweekly",xlab="Time (years)",
                             ylab="OS probability",
                             legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"),xlim=c(0,3),break.x.by=1)
figure2km[[1]] <- ggsurvplot(xeloxosca199, data=dnew,risk.table = T,risk.table.title="Strata",
                             title="Overall survival in XELOX",xlab="Time (years)",
                             ylab="OS probability",
                             legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"),xlim=c(0,5),break.x.by=1)
figure2km[[5]] <- ggsurvplot(xeloxoscea, data=dnew,risk.table = T,risk.table.title="Strata",
                             title="Overall survival in XELOX",xlab="Time (years)",
                             ylab="OS probability",
                             legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"),xlim=c(0,5),break.x.by=1)
figure2km[[4]] <- ggsurvplot(iceosca199, data=dnew,risk.table = T,risk.table.title="Strata",
                             title="Overall survival in ICE",xlab="Time (years)",
                             ylab="OS probability",
                             legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"),xlim=c(0,3),break.x.by=1)
figure2km[[8]] <- ggsurvplot(iceoscea, data=dnew,risk.table = T,risk.table.title="Strata",
                             title="Overall survival in ICE",xlab="Time (years)",
                             ylab="OS probability",
                             legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"),xlim=c(0,3),break.x.by=1)

fig2kmplot<-arrange_ggsurvplots(figure2km, surv.plot.height =0.9,print = TRUE,
                                ncol = 2, nrow = 4, risk.table.height = 0.4)

ggsave("plots/Figure 2.tiff", fig2kmplot,width = 40, height = 40, units = "cm")
ggsave("plots/Figure 2.pdf", fig2kmplot,width = 40, height = 40, units = "cm")
ggsave("plots/Figure 2.eps", fig2kmplot,width = 40, height = 40, units = "cm")



#Supplementary figure 1 Stage I-III CEA CA199 RFS
sfigure1km <- list()

sfigure1km[[1]] <- ggsurvplot(drectalrfsca199, data=dnew,risk.table = T,risk.table.title="Strata",
                             title="Recurrence-free survival in BIOREC + RECCET",xlab="Time (years)",
                             ylab="RFS probability",
                             legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"),xlim=c(0,5),break.x.by=1)
sfigure1km[[3]] <- ggsurvplot(drectalrfsca199, data=dnew,risk.table = T,risk.table.title="Strata",
                             title="Recurrence-free survival in BIOREC + RECCET",xlab="Time (years)",
                             ylab="RFS probability",
                             legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"),xlim=c(0,5),break.x.by=1)
sfigure1km[[2]] <- ggsurvplot(rebeccarfsca199, data=rebdnew,risk.table = T,risk.table.title="Strata",
                             title="Recurrence-free survival in REBECCA",xlab="Time (years)",
                             ylab="RFS probability",
                             legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"),break.x.by=1)
sfigure1km[[4]] <- ggsurvplot(rebeccarfscea, data=rebdnew,risk.table = T,risk.table.title="Strata",
                             title="Recurrence-free survival in REBECCA",xlab="Time (years)",
                             ylab="RFS probability",
                             legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"),break.x.by=1)


sfig1kmplot<-arrange_ggsurvplots(sfigure1km, surv.plot.height =0.75,print = TRUE,
                                ncol = 2, nrow = 2, risk.table.height = 0.2)

ggsave("plots/SFigure 1.tiff", sfig1kmplot,width = 40, height = 40, units = "cm")
ggsave("plots/SFigure 1.pdf", sfig1kmplot,width = 40, height = 40, units = "cm")
ggsave("plots/SFigure 1.eps", sfig1kmplot,width = 40, height = 40, units = "cm")


#Supplementary figure 2 Metastatic CEA CA199 PFS
sfigure2km <- list()


sfigure2km[[2]] <- ggsurvplot(hai12pfsca199, data=dnew,risk.table = T,risk.table.title="Strata",
                              title="Progression-free survival in HAI 1+HAI 2",xlab="Time (years)",
                              ylab="PFS probability",
                              legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"),xlim=c(0,3),break.x.by=1)
sfigure2km[[6]] <- ggsurvplot(hai12pfscea, data=dnew,risk.table = T,risk.table.title="Strata",
                              title="Progression-free survival in HAI 1+HAI 2",xlab="Time (years)",
                              ylab="PFS probability",
                              legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"),xlim=c(0,3),break.x.by=1)

sfigure2km[[3]] <- ggsurvplot(biweeklypfsca199, data=dnew,risk.table = T,risk.table.title="Strata",
                              title="Progression-free survival in Biweekly",xlab="Time (years)",
                              ylab="PFS probability",
                              legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"),xlim=c(0,2),break.x.by=1)
sfigure2km[[7]] <- ggsurvplot(biweeklypfscea, data=dnew,risk.table = T,risk.table.title="Strata",
                              title="Progression-free survival in Biweekly",xlab="Time (years)",
                              ylab="PFS probability",
                              legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"),xlim=c(0,2),break.x.by=1)
sfigure2km[[1]] <- ggsurvplot(xeloxpfsca199, data=dnew,risk.table = T,risk.table.title="Strata",
                              title="Progression-free survival in XELOX",xlab="Time (years)",
                              ylab="PFS probability",
                              legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"),xlim=c(0,2),break.x.by=1)
sfigure2km[[5]] <- ggsurvplot(xeloxpfscea, data=dnew,risk.table = T,risk.table.title="Strata",
                              title="Progression-free survival in XELOX",xlab="Time (years)",
                              ylab="PFS probability",
                              legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"),xlim=c(0,2),break.x.by=1)
sfigure2km[[4]] <- ggsurvplot(icepfsca199, data=dnew,risk.table = T,risk.table.title="Strata",
                              title="Progression-free survival in ICE",xlab="Time (years)",
                              ylab="PFS probability",
                              legend.labs=c("CA199 < 37 U/mL","CA199 > 37 U/mL"),break.x.by=1)
sfigure2km[[8]] <- ggsurvplot(icepfscea, data=dnew,risk.table = T,risk.table.title="Strata",
                              title="Progression-free survival in ICE",xlab="Time (years)",
                              ylab="PFS probability",
                              legend.labs=c("CEA < 5 ng/mL","CEA > 5 ng/mL"),break.x.by=1)

sfig2kmplot<-arrange_ggsurvplots(sfigure2km, surv.plot.height =0.9,print = TRUE,
                                 ncol = 2, nrow = 4, risk.table.height = 0.4)

ggsave("plots/SFigure 2.tiff", sfig2kmplot,width = 40, height = 40, units = "cm")
ggsave("plots/SFigure 2.pdf", sfig2kmplot,width = 40, height = 40, units = "cm")
ggsave("plots/SFigure 2.eps", sfig2kmplot,width = 40, height = 40, units = "cm")




#Supplementary figure 3 Stage III CEA CA199 N elevated RFS
sfigure3km <- list()

sfigure3km[[1]] <- ggsurvplot(drectalrfsnele, data=dnew,risk.table = T,risk.table.title="Strata",
                             title="Recurrence-free survival in BIOREC + RECCET",xlab="Time (years)",
                             ylab="RFS probability",
                             legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"),xlim=c(0,5),break.x.by=1)
sfigure3km[[2]] <-  ggsurvplot(rebeccaosnele, data=dnew,risk.table = T,risk.table.title="Strata",
                             title="Recurrence-free survival in REBECCA",xlab="Time (years)",
                             ylab="RFS probability",
                             legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"),break.x.by=1)


sfig3kmplot<-arrange_ggsurvplots(sfigure3km, surv.plot.height =0.75,print = TRUE, risk.table.height = 0.2)

ggsave("plots/SFigure 3.tiff", sfig3kmplot,width = 40, height = 40, units = "cm")
ggsave("plots/SFigure 3.pdf", sfig3kmplot,width = 40, height = 40, units = "cm")
ggsave("plots/SFigure 3.eps", sfig3kmplot,width = 40, height = 40, units = "cm")

#Supplementary figure 4 Stage III CEA CA199 N elevated OS
sfigure4km <- list()

sfigure4km[[1]] <- ggsurvplot(drectalosnele, data=dnew,risk.table = T,risk.table.title="Strata",
                             title="Overall survival in BIOREC + RECCET",xlab="Time (years)",
                             ylab="OS probability",
                             legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"),xlim=c(0,10),break.x.by=2)
sfigure4km[[2]] <- ggsurvplot(rebeccaosnele, data=dnew,risk.table = T,risk.table.title="Strata",
                             title="Overall survival in REBECCA",xlab="Time (years)",
                             ylab="OS probability",
                             legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"),break.x.by=2)



sfig4kmplot<-arrange_ggsurvplots(sfigure4km, surv.plot.height =0.75,print = TRUE,risk.table.height = 0.2)

ggsave("plots/SFigure 4.tiff", sfig4kmplot,width = 40, height = 40, units = "cm")
ggsave("plots/SFigure 4.pdf", sfig4kmplot,width = 40, height = 40, units = "cm")
ggsave("plots/SFigure 4.eps", sfig4kmplot,width = 40, height = 40, units = "cm")


#Supplementary figure 5 Metastatic CEA CA199 N elevated PFS
sfigure5km <- list()


sfigure5km[[1]] <- ggsurvplot(hai12pfsnele, data=dnew,risk.table = T,risk.table.title="Strata",
                              title="Progression-free survival in HAI 1+HAI 2",xlab="Time (years)",
                              ylab="PFS probability",
                              legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"),xlim=c(0,3),break.x.by=1)

sfigure5km[[2]] <- ggsurvplot(biweeklypfsnele, data=dnew,risk.table = T,risk.table.title="Strata",
                              title="Progression-free survival in Biweekly",xlab="Time (years)",
                              ylab="PFS probability",
                              legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"),xlim=c(0,2),break.x.by=1)

sfigure5km[[3]] <- ggsurvplot(xeloxpfsnele, data=dnew,risk.table = T,risk.table.title="Strata",
                              title="Progression-free survival in XELOX",xlab="Time (years)",
                              ylab="PFS probability",
                              legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"),xlim=c(0,2),break.x.by=1)

sfigure5km[[4]] <- ggsurvplot(icepfsnele, data=dnew,risk.table = T,risk.table.title="Strata",
                              title="Progression-free survival in ICE",xlab="Time (years)",
                              ylab="PFS probability",
                              legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"),break.x.by=1)

sfig5kmplot<-arrange_ggsurvplots(sfigure5km, surv.plot.height =0.9,print = TRUE,
                                 ncol = 2, nrow = 2, risk.table.height = 0.4)

ggsave("plots/SFigure 5.tiff", sfig5kmplot,width = 40, height = 40, units = "cm")
ggsave("plots/SFigure 5.pdf", sfig5kmplot,width = 40, height = 40, units = "cm")
ggsave("plots/SFigure 5.eps", sfig5kmplot,width = 40, height = 40, units = "cm")


#Supplementary figure 6 Metastatic CEA CA199 N elevated OS
sfigure6km <- list()


sfigure6km[[1]] <- ggsurvplot(hai12osnele, data=dnew,risk.table = T,risk.table.title="Strata",
                              title="Overall survival in HAI 1+HAI 2",xlab="Time (years)",
                              ylab="OS probability",
                              legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"),xlim=c(0,5),break.x.by=1)

sfigure6km[[2]] <- ggsurvplot(biweeklyosnele, data=dnew,risk.table = T,risk.table.title="Strata",
                              title="Overall survival in Biweekly",xlab="Time (years)",
                              ylab="OS probability",
                              legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"),xlim=c(0,5),break.x.by=1)

sfigure6km[[3]] <- ggsurvplot(xeloxosnele, data=dnew,risk.table = T,risk.table.title="Strata",
                              title="Overall survival in XELOX",xlab="Time (years)",
                              ylab="OS probability",
                              legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"),xlim=c(0,5),break.x.by=1)

sfigure6km[[4]] <- ggsurvplot(iceosnele, data=dnew,risk.table = T,risk.table.title="Strata",
                              title="Overall survival in ICE",xlab="Time (years)",
                              ylab="OS probability",
                              legend.labs=c("0 elevated markers","1 elevated marker","2 elevated markers"),break.x.by=1)

sfig6kmplot<-arrange_ggsurvplots(sfigure6km, surv.plot.height =0.9,print = TRUE,
                                 ncol = 2, nrow = 2, risk.table.height = 0.4)

ggsave("plots/SFigure 6.tiff", sfig6kmplot,width = 40, height = 40, units = "cm")
ggsave("plots/SFigure 6.pdf", sfig6kmplot,width = 40, height = 40, units = "cm")
ggsave("plots/SFigure 6.eps", sfig6kmplot,width = 40, height = 40, units = "cm")


#Mycorrplot function
myggcorrplot <- function (corr, method = c("square", "circle"), type = c("full", 
                                                                         "lower", "upper"), ggtheme = ggplot2::theme_minimal, title = "", 
                          show.legend = TRUE, legend.title = "Corr", show.diag = FALSE, 
                          colors = c("blue", "white", "red"), outline.color = "gray", 
                          hc.order = FALSE, hc.method = "complete", lab = FALSE, lab_col = "black", 
                          lab_size = 4, p.mat = NULL, sig.level = 0.05, insig = c("pch", 
                                                                                  "blank"), pch = 4, pch.col = "black", pch.cex = 5, tl.cex = 15, 
                          tl.col = "black", tl.srt = 45, lab.notsig="") 
{
  type <- match.arg(type)
  method <- match.arg(method)
  insig <- match.arg(insig)
  if (!is.matrix(corr) & !is.data.frame(corr)) 
    stop("Need a matrix or data frame!")
  corr <- as.matrix(corr)
  if (hc.order) {
    ord <- ggcorrplot:::.hc_cormat_order(corr)
    corr <- corr[ord, ord]
    if (!is.null(p.mat)) 
      p.mat <- p.mat[ord, ord]
  }
  if (type == "lower") {
    corr <- ggcorrplot:::.get_lower_tri(corr, show.diag)
    p.mat <- ggcorrplot:::.get_lower_tri(p.mat, show.diag)
  }
  else if (type == "upper") {
    corr <- ggcorrplot:::.get_upper_tri(corr, show.diag)
    p.mat <- ggcorrplot:::.get_upper_tri(p.mat, show.diag)
  }
  corr <- reshape2::melt(corr, na.rm = TRUE)
  corr$pvalue <- rep(NA, nrow(corr))
  corr$signif <- rep(NA, nrow(corr))
  if (!is.null(p.mat)) {
    p.mat <- reshape2::melt(p.mat, na.rm = TRUE)
    corr$coef <- corr$value
    corr$pvalue <- p.mat$value
    corr$signif <- as.numeric(p.mat$value <= sig.level)
    p.mat <- subset(p.mat, p.mat$value > sig.level)
    if (insig == "blank") 
      corr$value <- corr$value * corr$signif
  }
  corr$abs_corr <- abs(corr$value) * 10
  p <- ggplot2::ggplot(corr, ggplot2::aes_string("Var1", "Var2", 
                                                 fill = "value"))
  if (method == "square") 
    p <- p + ggplot2::geom_tile(color = outline.color)
  else if (method == "circle") {
    p <- p + ggplot2::geom_point(color = outline.color, shape = 21, 
                                 ggplot2::aes_string(size = "abs_corr")) + ggplot2::scale_size(range = c(4, 
                                                                                                         10)) + ggplot2::guides(size = FALSE)
  }
  p <- p + ggplot2::scale_fill_gradient2(low = colors[1], high = colors[3], 
                                         mid = colors[2], midpoint = 0, limit = c(-1, 1), space = "Lab", 
                                         name = legend.title) + ggtheme() + ggplot2::theme(axis.text.x = ggplot2::element_text(angle = tl.srt, 
                                                                                                                               vjust = 1, size = tl.cex, hjust = 1), axis.text.y = ggplot2::element_text(size = tl.cex)) + 
    ggplot2::coord_fixed()
  label <- as.character(round(corr[, "value"], 2))
  label[label=="0"] <- lab.notsig
  if (lab)
    p <- p + ggplot2::geom_text(ggplot2::aes_string("Var1", 
                                                    "Var2", label = "label"), color = lab_col, size = lab_size)
  if (!is.null(p.mat) & insig == "pch") {
    p <- p + ggplot2::geom_point(data = p.mat, ggplot2::aes_string("Var1", 
                                                                   "Var2"), shape = pch, size = pch.cex, color = pch.col)
  }
  if (title != "") 
    p <- p + ggplot2::ggtitle(title)
  if (!show.legend) 
    p <- p + ggplot2::theme(legend.position = "none")
  p <- p + ggcorrplot:::.no_panel()
  p
}
#Controls for arsenal tableby function

my_controls<-tableby.control(digits=2)

#Labels for descriptives tables

labels(dnew) <- c(age="Age (years)", 
                          sex="Sex", 
                          locprim="Location of primary tumor",
                          side="Side",
                          ps="Performance status",
                          locmet="Location of metastases",
                          primres="Primary tumor resected",
                          t="T-stage",
                          n="N-stage",
                          m="M-stage",
                          cea="CEA (ng/mL)",
                          ca199="CA19-9 (U/mL)",
                          ceahigh="CEA > 5 ng/mL",
                          ca199high="CA19-9 > 37 U/mL",
                          death = "Died",
                          futimed= "Follow-up time (days)",
                          futimey= "Follow-up time (years)",
                  rec="Recurrence",
                  rectime="Recurrence follow-up time",
                  death="Dead",
                  deathtime="Follow-up time (event=OS)")
labels(dhai) <- c(age="Age (years)", 
                  sex="Sex", 
                  locprim="Location of primary tumor",
                  side="Side",
                  ps="Performance status",
                  locmet="Location of metastases",
                  primres="Primary tumor resected",
                  t="T-stage",
                  n="N-stage",
                  m="M-stage",
                  cea="CEA (ng/mL)",
                  ca199="CA19-9 (U/mL)",
                  ceahigh="CEA > 5 ng/mL",
                  ca199high="CA19-9 > 37 U/mL",
                  death = "Died",
                  futimed= "Follow-up time (days)",
                  futimey= "Follow-up time (years)",
                  rec="Recurrence",
                  rectime="Recurrence follow-up time",
                  death="Dead",
                  deathtime="Follow-up time (event=OS)")
labels(drectal) <- c(age="Age (years)", 
                     sex="Sex", 
                     locprim="Location of primary tumor",
                     side="Side",
                     ps="Performance status",
                     locmet="Location of metastases",
                     primres="Primary tumor resected",
                     t="T-stage",
                     n="N-stage",
                     m="M-stage",
                     cea="CEA (ng/mL)",
                     ca199="CA19-9 (U/mL)",
                     ceahigh="CEA > 5 ng/mL",
                     ca199high="CA19-9 > 37 U/mL",
                     death = "Died",
                     futimed= "Follow-up time (days)",
                     futimey= "Follow-up time (years)",
                     rec="Recurrence",
                     rectime="Recurrence follow-up time",
                     death="Dead",
                     deathtime="Follow-up time (event=OS)")

#Lables for gtsummary
dnew=dnew%>%
  set_variable_labels(log2ca199="CA19-9 (log2-transformed)")


#Lav table 1 for hele kohorten
table1<-tableby(proname~age+sex+locprim+side+ps+locmet+primres+t+n+m+cea+ca199+ceahigh+ca199high+deathtime+rectime,data=dnew,control=my_controls)
#Table for HAI studies
table2<-tableby(~age+sex+locprim+side+ps+locmet+primres+t+n+m+cea+ca199+ceahigh+ca199high+deathtime+rectime,data=dhai,control=my_controls)
#Table for rectal studies
table3<-tableby(~age+sex+locprim+side+ps+locmet+primres+t+n+m+cea+ca199+ceahigh+ca199high+deathtime+rectime,data=drectal,control=my_controls)


#Hypothesis tests for baseline characteristics
dnewtest=dnew %>% 
  mutate(met=as.factor(if_else(proname=="HAI1"|proname=="HAI2"|proname=="Biweekly"|proname=="XELOX"|proname=="ICE","Metastatic","Stage III")))
table(dnewtest$met)

t.test(dnewtest$log2cea~dnewtest$met)
t.test(dnewtest$log2ca199~dnewtest$met)


#Cox regression models for univariate and multivariate PFS HAI 1
pfshai1<-survfit(Surv(progtime,prog)~1,data=subset(dnew, proname=="HAI1"))
pfshai1

pfshai1coxcrudecea<-coxph(Surv(progtime,prog)~log2cea,data=subset(dnew, proname=="HAI1"),id=bigiid)
pfshai1coxcrudecea
pfshai1coxcrudeca199<-coxph(Surv(progtime,prog)~log2ca199,data=subset(dnew, proname=="HAI1"))

pfshai1coxadj<-coxph(Surv(progtime,prog)~log2cea+log2ca199+age+sex+side,data=subset(dnew, proname=="HAI1"))

pfshai1coxcrudecea%>%
  tbl_regression(exponentiate = T,label=log2cea~"CEA (log2-transformed)")%>%
  as_gt() %>% 
  tab_header(title = "Progression-free survival Cox regression univariate CEA in HAI 1")
pfshai1coxcrudeca199%>%
  tbl_regression(exponentiate = T,label=log2ca199~"CA19-9 (log2-transformed)")%>%
  as_gt()%>% 
  tab_header(title = "Progression-free survival Cox regression univariate CA19-9 in HAI 1")
pfshai1coxadj%>%
  tbl_regression(exponentiate = T,label=c(log2ca199~"CA19-9 (log2-transformed)",
                                          log2cea~"CEA (log2-transformed)",age~"Age",sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Progression-free survival Cox regression multivariate model in HAI 1")


#Cox regression models for univariate and multivariate PFS HAI 2
pfshai2<-survfit(Surv(progtime,prog)~1,data=subset(dnew, proname=="HAI2"))
pfshai2

pfshai2coxcrudecea<-coxph(Surv(progtime,prog)~log2cea,data=subset(dnew, proname=="HAI2"))
pfshai2coxcrudeca199<-coxph(Surv(progtime,prog)~log2ca199,data=subset(dnew, proname=="HAI2"))

pfshai2coxadj<-coxph(Surv(progtime,prog)~log2cea+log2ca199+age+sex+side,data=subset(dnew, proname=="HAI2"))

pfshai2coxcrudecea%>%
  tbl_regression(exponentiate = T,label=log2cea~"CEA (log2-transformed)")%>%
  as_gt() %>% 
  tab_header(title = "Progression-free survival Cox regression univariate CEA in HAI 2")
pfshai2coxcrudeca199%>%
  tbl_regression(exponentiate = T,label=log2ca199~"CA19-9 (log2-transformed)")%>%
  as_gt()%>% 
  tab_header(title = "Progression-free survival Cox regression univariate CA19-9 in HAI 2")
pfshai2coxadj%>%
  tbl_regression(exponentiate = T,label=c(log2cea~"CEA (log2-transformed)",
                                          log2ca199~"CA19-9 (log2-transformed)",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Progression-free survival Cox regression multivariate model in HAI 2")


#Cox regression models for univariate and multivariate PFS HAI 1+2
pfshai12<-survfit(Surv(progtime,prog)~1,data=dhai)
pfshai12

pfshai12coxcrudecea<-coxph(Surv(progtime,prog)~log2cea,data=dhai)
pfshai12coxcrudeca199<-coxph(Surv(progtime,prog)~log2ca199,data=dhai)

pfshai12coxadj<-coxph(Surv(progtime,prog)~log2cea+log2ca199+age+sex+side,data=dhai)

pfshai12coxcrudecea%>%
  tbl_regression(exponentiate = T,label=log2cea~"CEA (log2-transformed)")%>%
  as_gt() %>% 
  tab_header(title = "Progression-free survival Cox regression univariate CEA in HAI 1+2")
pfshai12coxcrudeca199%>%
  tbl_regression(exponentiate = T,label=log2ca199~"CA19-9 (log2-transformed)")%>%
  as_gt()%>% 
  tab_header(title = "Progression-free survival Cox regression univariate CA19-9 in HAI 1+2")
pfshai12coxadj%>%
  tbl_regression(exponentiate = T,label=c(log2cea~"CEA (log2-transformed)",
                                          log2ca199~"CA19-9 (log2-transformed)",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Progression-free survival Cox regression multivariate model in HAI 1+2")


#Cox regression models for univariate and multivariate PFS Biweekly
pfsbiweekly<-survfit(Surv(progtime,prog)~1,data=subset(dnew, proname=="Biweekly"))
pfsbiweekly

pfsbiweeklycoxcrudecea<-coxph(Surv(progtime,prog)~log2cea,data=subset(dnew, proname=="Biweekly"))
pfsbiweeklycoxcrudeca199<-coxph(Surv(progtime,prog)~log2ca199,data=subset(dnew, proname=="Biweekly"))

pfsbiweeklycoxadj<-coxph(Surv(progtime,prog)~log2cea+log2ca199+age+sex+side,data=subset(dnew, proname=="Biweekly"))

pfsbiweeklycoxcrudecea%>%
  tbl_regression(exponentiate = T,label=log2cea~"CEA (log2-transformed)")%>%
  as_gt() %>% 
  tab_header(title = "Progression-free survival Cox regression univariate CEA in Biweekly")
pfsbiweeklycoxcrudeca199%>%
  tbl_regression(exponentiate = T,label=log2ca199~"CA19-9 (log2-transformed)")%>%
  as_gt()%>% 
  tab_header(title = "Progression-free survival Cox regression univariate CA19-9 in Biweekly")
pfsbiweeklycoxadj%>%
  tbl_regression(exponentiate = T,label=c(log2cea~"CEA (log2-transformed)",
                                          log2ca199~"CA19-9 (log2-transformed)",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Progression-free survival Cox regression multivariate model in Biweekly")

#Cox regression models for univariate and multivariate PFS XELOX
pfsxelox<-survfit(Surv(progtime,prog)~1,data=subset(dnew, proname=="XELOX"))
pfsxelox

pfsxeloxcoxcrudecea<-coxph(Surv(progtime,prog)~log2cea,data=subset(dnew, proname=="XELOX"))
pfsxeloxcoxcrudeca199<-coxph(Surv(progtime,prog)~log2ca199,data=subset(dnew, proname=="XELOX"))

pfsxeloxcoxadj<-coxph(Surv(progtime,prog)~log2cea+log2ca199+age+sex+side,data=subset(dnew, proname=="XELOX"))

pfsxeloxcoxcrudecea%>%
  tbl_regression(exponentiate = T,label=log2cea~"CEA (log2-transformed)")%>%
  as_gt() %>% 
  tab_header(title = "Progression-free survival Cox regression univariate CEA in XELOX")
pfsxeloxcoxcrudeca199%>%
  tbl_regression(exponentiate = T,label=log2ca199~"CA19-9 (log2-transformed)")%>%
  as_gt()%>% 
  tab_header(title = "Progression-free survival Cox regression univariate CA19-9 in XELOX")
pfsxeloxcoxadj%>%
  tbl_regression(exponentiate = T,label=c(log2cea~"CEA (log2-transformed)",
                                          log2ca199~"CA19-9 (log2-transformed)",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Progression-free survival Cox regression multivariate model in XELOX")

#Cox regression models for univariate and multivariate PFS ICE
pfsice<-survfit(Surv(progtime,prog)~1,data=subset(dnew, proname=="ICE"))
pfsice

pfsicecoxcrudecea<-coxph(Surv(progtime,prog)~log2cea,data=subset(dnew, proname=="ICE"))
pfsicecoxcrudeca199<-coxph(Surv(progtime,prog)~log2ca199,data=subset(dnew, proname=="ICE"))

pfsicecoxadj<-coxph(Surv(progtime,prog)~log2cea+log2ca199+age+sex+side,data=subset(dnew, proname=="ICE"))

pfsicecoxcrudecea%>%
  tbl_regression(exponentiate = T,label=log2cea~"CEA (log2-transformed)")%>%
  as_gt() %>% 
  tab_header(title = "Progression-free survival Cox regression univariate CEA in ICE")
pfsicecoxcrudeca199%>%
  tbl_regression(exponentiate = T,label=log2ca199~"CA19-9 (log2-transformed)")%>%
  as_gt()%>% 
  tab_header(title = "Progression-free survival Cox regression univariate CA19-9 in ICE")
pfsicecoxadj%>%
  tbl_regression(exponentiate = T,label=c(log2cea~"CEA (log2-transformed)",
                                          log2ca199~"CA19-9 (log2-transformed)",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Progression-free survival Cox regression multivariate model in ICE")


#Cox regression models for univariate and multivariate RFS BIOREC
rfsbiorec<-survfit(Surv(rectime,rec)~1,data=subset(dnew, proname=="BIOREC"))
rfsbiorec

rfsbioreccoxcrudecea<-coxph(Surv(rectime,rec)~log2cea,data=subset(dnew, proname=="BIOREC"))
rfsbioreccoxcrudeca199<-coxph(Surv(rectime,rec)~log2ca199,data=subset(dnew, proname=="BIOREC"))

rfsbioreccoxadj<-coxph(Surv(rectime,rec)~log2cea+log2ca199+age+sex+side,data=subset(dnew, proname=="BIOREC"))

rfsbioreccoxcrudecea%>%
  tbl_regression(exponentiate = T,label=log2cea~"CEA (log2-transformed)")%>%
  as_gt() %>% 
  tab_header(title = "Recurrence-free survival Cox regression univariate CEA in BIOREC")
rfsbioreccoxcrudeca199%>%
  tbl_regression(exponentiate = T,label=log2ca199~"CA19-9 (log2-transformed)")%>%
  as_gt()%>% 
  tab_header(title = "Recurrence-free survival Cox regression univariate CA19-9 in BIOREC")
rfsbioreccoxadj%>%
  tbl_regression(exponentiate = T,label=c(log2cea~"CEA (log2-transformed)",
                                          log2ca199~"CA19-9 (log2-transformed)",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Recurrence-free survival Cox regression multivariate model in BIOREC")

#Cox regression models for univariate and multivariate RFS RECCET
rfsreccet<-survfit(Surv(rectime,rec)~1,data=subset(dnew, proname=="RECCET"))
rfsreccet

rfsreccetcoxcrudecea<-coxph(Surv(rectime,rec)~log2cea,data=subset(dnew, proname=="RECCET"))
rfsreccetcoxcrudeca199<-coxph(Surv(rectime,rec)~log2ca199,data=subset(dnew, proname=="RECCET"))

rfsreccetcoxadj<-coxph(Surv(rectime,rec)~log2cea+log2ca199+age+sex+side,data=subset(dnew, proname=="RECCET"))

rfsreccetcoxcrudecea%>%
  tbl_regression(exponentiate = T,label=log2cea~"CEA (log2-transformed)")%>%
  as_gt() %>% 
  tab_header(title = "Recurrence-free survival Cox regression univariate CEA in RECCET")
rfsreccetcoxcrudeca199%>%
  tbl_regression(exponentiate = T,label=log2ca199~"CA19-9 (log2-transformed)")%>%
  as_gt()%>% 
  tab_header(title = "Recurrence-free survival Cox regression univariate CA19-9 in RECCET")
rfsreccetcoxadj%>%
  tbl_regression(exponentiate = T,label=c(log2cea~"CEA (log2-transformed)",
                                          log2ca199~"CA19-9 (log2-transformed)",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Recurrence-free survival Cox regression multivariate model in RECCET")


#Cox regression models for univariate and multivariate RFS BIOREC+RECCET
rfsbiorecreccet<-survfit(Surv(rectime,rec)~1,data=drectal)
rfsbiorecreccet

rfsbiorecreccetcoxcrudecea<-coxph(Surv(rectime,rec)~log2cea,data=drectal)
rfsbiorecreccetcoxcrudeca199<-coxph(Surv(rectime,rec)~log2ca199,data=drectal)

rfsbiorecreccetcoxadj<-coxph(Surv(rectime,rec)~log2cea+log2ca199+age+sex+side,data=drectal)

rfsbiorecreccetcoxcrudecea%>%
  tbl_regression(exponentiate = T,label=log2cea~"CEA (log2-transformed)")%>%
  as_gt() %>% 
  tab_header(title = "Recurrence-free survival Cox regression univariate CEA in BIOREC+RECCET")
rfsbiorecreccetcoxcrudeca199%>%
  tbl_regression(exponentiate = T,label=log2ca199~"CA19-9 (log2-transformed)")%>%
  as_gt()%>% 
  tab_header(title = "Recurrence-free survival Cox regression univariate CA19-9 in BIOREC+RECCET")
rfsbiorecreccetcoxadj%>%
  tbl_regression(exponentiate = T,label=c(log2cea~"CEA (log2-transformed)",
                                          log2ca199~"CA19-9 (log2-transformed)",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Recurrence-free survival Cox regression multivariate model in BIOREC+RECCET")


#Cox regression models for univariate and multivariate RFS REBECCA
rfsrebecca<-survfit(Surv(rectime,rec)~1,data=subset(rebdnew, proname=="REBECCA"))
rfsrebecca

rfsrebeccacoxcrudecea<-coxph(Surv(rectime,rec)~log2cea,data=subset(rebdnew, proname=="REBECCA"))
rfsrebeccacoxcrudeca199<-coxph(Surv(rectime,rec)~log2ca199,data=subset(rebdnew, proname=="REBECCA"))

rfsrebeccacoxadj<-coxph(Surv(rectime,rec)~log2cea+log2ca199+age+sex+side,data=subset(rebdnew, proname=="REBECCA"))

rfsrebeccacoxcrudecea%>%
  tbl_regression(exponentiate = T,label=log2cea~"CEA (log2-transformed)")%>%
  as_gt() %>% 
  tab_header(title = "Recurrence-free survival Cox regression univariate CEA in REBECCA")
rfsrebeccacoxcrudeca199%>%
  tbl_regression(exponentiate = T,label=log2ca199~"CA19-9 (log2-transformed)")%>%
  as_gt()%>% 
  tab_header(title = "Recurrence-free survival Cox regression univariate CA19-9 in REBECCA")
rfsrebeccacoxadj%>%
  tbl_regression(exponentiate = T,label=c(log2cea~"CEA (log2-transformed)",
                                          log2ca199~"CA19-9 (log2-transformed)",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Recurrence-free survival Cox regression multivariate model in REBECCA")


#Cox regression models for univariate and multivariate OS

#Cox regression models for univariate and multivariate OS HAI 1
oshai1<-survfit(Surv(deathtime,death)~1,data=subset(dnew, proname=="HAI1"))
oshai1

oshai1coxcrudecea<-coxph(Surv(deathtime,death)~log2cea,data=subset(dnew, proname=="HAI1"))
oshai1coxcrudeca199<-coxph(Surv(deathtime,death)~log2ca199,data=subset(dnew, proname=="HAI1"))

oshai1coxadj<-coxph(Surv(deathtime,death)~log2cea+log2ca199+age+sex+side,data=subset(dnew, proname=="HAI1"))

oshai1coxcrudecea%>%
  tbl_regression(exponentiate = T,label=log2cea~"CEA (log2-transformed)")%>%
  as_gt() %>% 
  tab_header(title = "Overall survival Cox regression univariate CEA in HAI 1")
oshai1coxcrudeca199%>%
  tbl_regression(exponentiate = T,label=log2ca199~"CA19-9 (log2-transformed)")%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression univariate CA19-9 in HAI 1")
oshai1coxadj%>%
  tbl_regression(exponentiate = T,label=c(log2ca199~"CA19-9 (log2-transformed)",
                                          log2cea~"CEA (log2-transformed)",age~"Age",sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression multivariate model in HAI 1")


#Cox regression models for univariate and multivariate OS HAI 2
oshai2<-survfit(Surv(deathtime,death)~1,data=subset(dnew, proname=="HAI2"))
oshai2

oshai2coxcrudecea<-coxph(Surv(deathtime,death)~log2cea,data=subset(dnew, proname=="HAI2"))
oshai2coxcrudeca199<-coxph(Surv(deathtime,death)~log2ca199,data=subset(dnew, proname=="HAI2"))

oshai2coxadj<-coxph(Surv(deathtime,death)~log2cea+log2ca199+age+sex+side,data=subset(dnew, proname=="HAI2"))

oshai2coxcrudecea%>%
  tbl_regression(exponentiate = T,label=log2cea~"CEA (log2-transformed)")%>%
  as_gt() %>% 
  tab_header(title = "Overall survival Cox regression univariate CEA in HAI 2")
oshai2coxcrudeca199%>%
  tbl_regression(exponentiate = T,label=log2ca199~"CA19-9 (log2-transformed)")%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression univariate CA19-9 in HAI 2")
oshai2coxadj%>%
  tbl_regression(exponentiate = T,label=c(log2cea~"CEA (log2-transformed)",
                                          log2ca199~"CA19-9 (log2-transformed)",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression multivariate model in HAI 2")


#Cox regression models for univariate and multivariate OS HAI 1+2
oshai12<-survfit(Surv(deathtime,death)~1,data=dhai)
oshai12

oshai12coxcrudecea<-coxph(Surv(deathtime,death)~log2cea,data=dhai)
oshai12coxcrudeca199<-coxph(Surv(deathtime,death)~log2ca199,data=dhai)

oshai12coxadj<-coxph(Surv(deathtime,death)~log2cea+log2ca199+age+sex+side,data=dhai)

oshai12coxcrudecea%>%
  tbl_regression(exponentiate = T,label=log2cea~"CEA (log2-transformed)")%>%
  as_gt() %>% 
  tab_header(title = "Overall survival Cox regression univariate CEA in HAI 1+2")
oshai12coxcrudeca199%>%
  tbl_regression(exponentiate = T,label=log2ca199~"CA19-9 (log2-transformed)")%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression univariate CA19-9 in HAI 1+2")
oshai12coxadj%>%
  tbl_regression(exponentiate = T,label=c(log2cea~"CEA (log2-transformed)",
                                          log2ca199~"CA19-9 (log2-transformed)",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression multivariate model in HAI 1+2")


#Cox regression models for univariate and multivariate OS Biweekly
osbiweekly<-survfit(Surv(deathtime,death)~1,data=subset(dnew, proname=="Biweekly"))
osbiweekly

osbiweeklycoxcrudecea<-coxph(Surv(deathtime,death)~log2cea,data=subset(dnew, proname=="Biweekly"))
osbiweeklycoxcrudeca199<-coxph(Surv(deathtime,death)~log2ca199,data=subset(dnew, proname=="Biweekly"))

osbiweeklycoxadj<-coxph(Surv(deathtime,death)~log2cea+log2ca199+age+sex+side,data=subset(dnew, proname=="Biweekly"))

osbiweeklycoxcrudecea%>%
  tbl_regression(exponentiate = T,label=log2cea~"CEA (log2-transformed)")%>%
  as_gt() %>% 
  tab_header(title = "Overall survival Cox regression univariate CEA in Biweekly")
osbiweeklycoxcrudeca199%>%
  tbl_regression(exponentiate = T,label=log2ca199~"CA19-9 (log2-transformed)")%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression univariate CA19-9 in Biweekly")
osbiweeklycoxadj%>%
  tbl_regression(exponentiate = T,label=c(log2cea~"CEA (log2-transformed)",
                                          log2ca199~"CA19-9 (log2-transformed)",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression multivariate model in Biweekly")

#Cox regression models for univariate and multivariate OS XELOX
osxelox<-survfit(Surv(deathtime,death)~1,data=subset(dnew, proname=="XELOX"))
osxelox

osxeloxcoxcrudecea<-coxph(Surv(deathtime,death)~log2cea,data=subset(dnew, proname=="XELOX"))
osxeloxcoxcrudeca199<-coxph(Surv(deathtime,death)~log2ca199,data=subset(dnew, proname=="XELOX"))

osxeloxcoxadj<-coxph(Surv(deathtime,death)~log2cea+log2ca199+age+sex+side,data=subset(dnew, proname=="XELOX"))

osxeloxcoxcrudecea%>%
  tbl_regression(exponentiate = T,label=log2cea~"CEA (log2-transformed)")%>%
  as_gt() %>% 
  tab_header(title = "Overall survival Cox regression univariate CEA in XELOX")
osxeloxcoxcrudeca199%>%
  tbl_regression(exponentiate = T,label=log2ca199~"CA19-9 (log2-transformed)")%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression univariate CA19-9 in XELOX")
osxeloxcoxadj%>%
  tbl_regression(exponentiate = T,label=c(log2cea~"CEA (log2-transformed)",
                                          log2ca199~"CA19-9 (log2-transformed)",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression multivariate model in XELOX")

#Cox regression models for univariate and multivariate OS ICE
osice<-survfit(Surv(deathtime,death)~1,data=subset(dnew, proname=="ICE"))
osice

osicecoxcrudecea<-coxph(Surv(deathtime,death)~log2cea,data=subset(dnew, proname=="ICE"))
osicecoxcrudeca199<-coxph(Surv(deathtime,death)~log2ca199,data=subset(dnew, proname=="ICE"))

osicecoxadj<-coxph(Surv(deathtime,death)~log2cea+log2ca199+age+sex+side,data=subset(dnew, proname=="ICE"))

osicecoxcrudecea%>%
  tbl_regression(exponentiate = T,label=log2cea~"CEA (log2-transformed)")%>%
  as_gt() %>% 
  tab_header(title = "Overall survival Cox regression univariate CEA in ICE")
osicecoxcrudeca199%>%
  tbl_regression(exponentiate = T,label=log2ca199~"CA19-9 (log2-transformed)")%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression univariate CA19-9 in ICE")
osicecoxadj%>%
  tbl_regression(exponentiate = T,label=c(log2cea~"CEA (log2-transformed)",
                                          log2ca199~"CA19-9 (log2-transformed)",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression multivariate model in ICE")


#Cox regression models for univariate and multivariate OS BIOREC
osbiorec<-survfit(Surv(deathtime,death)~1,data=subset(dnew, proname=="BIOREC"))
osbiorec

osbioreccoxcrudecea<-coxph(Surv(deathtime,death)~log2cea,data=subset(dnew, proname=="BIOREC"))
osbioreccoxcrudeca199<-coxph(Surv(deathtime,death)~log2ca199,data=subset(dnew, proname=="BIOREC"))

osbioreccoxadj<-coxph(Surv(deathtime,death)~log2cea+log2ca199+age+sex+side,data=subset(dnew, proname=="BIOREC"))

osbioreccoxcrudecea%>%
  tbl_regression(exponentiate = T,label=log2cea~"CEA (log2-transformed)")%>%
  as_gt() %>% 
  tab_header(title = "Overall survival Cox regression univariate CEA in BIOREC")
osbioreccoxcrudeca199%>%
  tbl_regression(exponentiate = T,label=log2ca199~"CA19-9 (log2-transformed)")%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression univariate CA19-9 in BIOREC")
osbioreccoxadj%>%
  tbl_regression(exponentiate = T,label=c(log2cea~"CEA (log2-transformed)",
                                          log2ca199~"CA19-9 (log2-transformed)",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression multivariate model in BIOREC")

#Cox regression models for univariate and multivariate OS RECCET
osreccet<-survfit(Surv(deathtime,death)~1,data=subset(dnew, proname=="RECCET"))
osreccet

osreccetcoxcrudecea<-coxph(Surv(deathtime,death)~log2cea,data=subset(dnew, proname=="RECCET"))
osreccetcoxcrudeca199<-coxph(Surv(deathtime,death)~log2ca199,data=subset(dnew, proname=="RECCET"))

osreccetcoxadj<-coxph(Surv(deathtime,death)~log2cea+log2ca199+age+sex+side,data=subset(dnew, proname=="RECCET"))

osreccetcoxcrudecea%>%
  tbl_regression(exponentiate = T,label=log2cea~"CEA (log2-transformed)")%>%
  as_gt() %>% 
  tab_header(title = "Overall survival Cox regression univariate CEA in RECCET")
osreccetcoxcrudeca199%>%
  tbl_regression(exponentiate = T,label=log2ca199~"CA19-9 (log2-transformed)")%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression univariate CA19-9 in RECCET")
osreccetcoxadj%>%
  tbl_regression(exponentiate = T,label=c(log2cea~"CEA (log2-transformed)",
                                          log2ca199~"CA19-9 (log2-transformed)",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression multivariate model in RECCET")


#Cox regression models for univariate and multivariate OS BIOREC+RECCET
osbiorecreccet<-survfit(Surv(deathtime,death)~1,data=drectal)
osbiorecreccet

osbiorecreccetcoxcrudecea<-coxph(Surv(deathtime,death)~log2cea,data=drectal)
osbiorecreccetcoxcrudeca199<-coxph(Surv(deathtime,death)~log2ca199,data=drectal)

osbiorecreccetcoxadj<-coxph(Surv(deathtime,death)~log2cea+log2ca199+age+sex+side,data=drectal)

osbiorecreccetcoxcrudecea%>%
  tbl_regression(exponentiate = T,label=log2cea~"CEA (log2-transformed)")%>%
  as_gt() %>% 
  tab_header(title = "Overall survival Cox regression univariate CEA in BIOREC+RECCET")
osbiorecreccetcoxcrudeca199%>%
  tbl_regression(exponentiate = T,label=log2ca199~"CA19-9 (log2-transformed)")%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression univariate CA19-9 in BIOREC+RECCET")
osbiorecreccetcoxadj%>%
  tbl_regression(exponentiate = T,label=c(log2cea~"CEA (log2-transformed)",
                                          log2ca199~"CA19-9 (log2-transformed)",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression multivariate model in BIOREC+RECCET")



#Cox regression models for univariate and multivariate OS REBECCA
osrebecca<-survfit(Surv(deathtime,death)~1,data=subset(rebdnew, proname=="REBECCA"))
osrebecca

osrebeccacoxcrudecea<-coxph(Surv(deathtime,death)~log2cea,data=subset(rebdnew, proname=="REBECCA"))
osrebeccacoxcrudeca199<-coxph(Surv(deathtime,death)~log2ca199,data=subset(rebdnew, proname=="REBECCA"))

osrebeccacoxadj<-coxph(Surv(deathtime,death)~log2cea+log2ca199+age+sex+side,data=subset(rebdnew, proname=="REBECCA"))

osrebeccacoxcrudecea%>%
  tbl_regression(exponentiate = T,label=log2cea~"CEA (log2-transformed)")%>%
  as_gt() %>% 
  tab_header(title = "Overall survival Cox regression univariate CEA in REBECCA")
osrebeccacoxcrudeca199%>%
  tbl_regression(exponentiate = T,label=log2ca199~"CA19-9 (log2-transformed)")%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression univariate CA19-9 in REBECCA")
osrebeccacoxadj%>%
  tbl_regression(exponentiate = T,label=c(log2cea~"CEA (log2-transformed)",
                                          log2ca199~"CA19-9 (log2-transformed)",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression multivariate model in REBECCA")


##################################################################################
#
#
#
#
##################################################################################
##N elevated (biomarker panel) Cox regressions


#Cox regression models for univariate and multivariate PFS n elevated HAI 1
pfshai1coxcrudenele<-coxph(Surv(progtime,prog)~nelevated,data=subset(dnew, proname=="HAI1"),id=bigiid)

pfshai1coxneleadj<-coxph(Surv(progtime,prog)~nelevated+age+sex+side,data=subset(dnew, proname=="HAI1"))

pfshai1coxcrudenele%>%
  tbl_regression(exponentiate = T,label=nelevated~"Number of elevated markers")%>%
  as_gt() %>% 
  tab_header(title = "Progression-free survival Cox regression univariate N elevated in HAI 1")

pfshai1coxneleadj%>%
  tbl_regression(exponentiate = T,label=c(nelevated~"Number of elevated markers",age~"Age",
                                                sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Progression-free survival Cox regression N elevated multivariate model in HAI 1")


#Cox regression models for univariate and multivariate PFS n elevated HAI 2
pfshai2coxcrudenele<-coxph(Surv(progtime,prog)~nelevated,data=subset(dnew, proname=="HAI2"))

pfshai2coxneleadj<-coxph(Surv(progtime,prog)~nelevated+age+sex+side,data=subset(dnew, proname=="HAI2"))

pfshai2coxcrudenele%>%
  tbl_regression(exponentiate = T,label=nelevated~"Number of elevated markers")%>%
  as_gt() %>% 
  tab_header(title = "Progression-free survival Cox regression univariate N elevated in HAI 2")

pfshai2coxneleadj%>%
  tbl_regression(exponentiate = T,label=c(nelevated~"Number of elevated markers",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Progression-free survival Cox regression multivariate model N elevated in HAI 2")


#Cox regression models for univariate and multivariate PFS n elevated HAI 1+2
pfshai12coxcrudenele<-coxph(Surv(progtime,prog)~nelevated,data=dhai)

pfshai12coxneleadj<-coxph(Surv(progtime,prog)~nelevated+age+sex+side,data=dhai)

pfshai12coxcrudenele%>%
  tbl_regression(exponentiate = T,label=nelevated~"Number of elevated markers")%>%
  as_gt() %>% 
  tab_header(title = "Progression-free survival Cox regression univariate N elevated in HAI 1+2")

pfshai12coxneleadj%>%
  tbl_regression(exponentiate = T,label=c(nelevated~"Number of elevated markers",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Progression-free survival Cox regression multivariate model N elevated in HAI 1+2")


#Cox regression models for univariate and multivariate PFS n elevated Biweekly

pfsbiweeklycoxcrudenele<-coxph(Surv(progtime,prog)~nelevated,data=subset(dnew, proname=="Biweekly"))

pfsbiweeklycoxneleadj<-coxph(Surv(progtime,prog)~nelevated+age+sex+side,data=subset(dnew, proname=="Biweekly"))

pfsbiweeklycoxcrudenele%>%
  tbl_regression(exponentiate = T,label=nelevated~"Number of elevated markers")%>%
  as_gt() %>% 
  tab_header(title = "Progression-free survival Cox regression univariate N elevated in Biweekly")

pfsbiweeklycoxneleadj%>%
  tbl_regression(exponentiate = T,label=c(nelevated~"Number of elevated markers",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Progression-free survival Cox regression multivariate model N elevated in Biweekly")

#Cox regression models for univariate and multivariate PFS n elevated XELOX

pfsxeloxcoxcrudenele<-coxph(Surv(progtime,prog)~nelevated,data=subset(dnew, proname=="XELOX"))

pfsxeloxcoxneleadj<-coxph(Surv(progtime,prog)~nelevated+age+sex+side,data=subset(dnew, proname=="XELOX"))

pfsxeloxcoxcrudenele%>%
  tbl_regression(exponentiate = T,label=nelevated~"Number of elevated markers")%>%
  as_gt() %>% 
  tab_header(title = "Progression-free survival Cox regression univariate N elevated in XELOX")

pfsxeloxcoxneleadj%>%
  tbl_regression(exponentiate = T,label=c(nelevated~"Number of elevated markers",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Progression-free survival Cox regression multivariate model N elevated in XELOX")

#Cox regression models for univariate and multivariate PFS n elevated ICE


pfsicecoxcrudenele<-coxph(Surv(progtime,prog)~nelevated,data=subset(dnew, proname=="ICE"))

pfsicecoxneleadj<-coxph(Surv(progtime,prog)~nelevated+age+sex+side,data=subset(dnew, proname=="ICE"))

pfsicecoxcrudenele%>%
  tbl_regression(exponentiate = T,label=nelevated~"Number of elevated markers")%>%
  as_gt() %>% 
  tab_header(title = "Progression-free survival Cox regression univariate N elevated in ICE")

pfsicecoxneleadj%>%
  tbl_regression(exponentiate = T,label=c(nelevated~"Number of elevated markers",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Progression-free survival Cox regression multivariate model N elevated in ICE")


#Cox regression models for univariate and multivariate RFS n elevated BIOREC

rfsbioreccoxcrudenele<-coxph(Surv(rectime,rec)~nelevated,data=subset(dnew, proname=="BIOREC"))


rfsbioreccoxneleadj<-coxph(Surv(rectime,rec)~nelevated+age+sex+side,data=subset(dnew, proname=="BIOREC"))

rfsbioreccoxcrudenele%>%
  tbl_regression(exponentiate = T,label=nelevated~"Number of elevated markers")%>%
  as_gt() %>% 
  tab_header(title = "Recurrence-free survival Cox regression univariate N elevated in BIOREC")

rfsbioreccoxneleadj%>%
  tbl_regression(exponentiate = T,label=c(nelevated~"Number of elevated markers",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Recurrence-free survival Cox regression multivariate model N elevated in BIOREC")

#Cox regression models for univariate and multivariate RFS n elevated RECCET


rfsreccetcoxcrudenele<-coxph(Surv(rectime,rec)~nelevated,data=subset(dnew, proname=="RECCET"))


rfsreccetcoxneleadj<-coxph(Surv(rectime,rec)~nelevated+age+sex+side,data=subset(dnew, proname=="RECCET"))

rfsreccetcoxcrudenele%>%
  tbl_regression(exponentiate = T,label=nelevated~"Number of elevated markers")%>%
  as_gt() %>% 
  tab_header(title = "Recurrence-free survival Cox regression univariate N elevated in RECCET")

rfsreccetcoxneleadj%>%
  tbl_regression(exponentiate = T,label=c(nelevated~"Number of elevated markers",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Recurrence-free survival Cox regression multivariate model N elevated in RECCET")


#Cox regression models for univariate and multivariate RFS n elevated BIOREC+RECCET


rfsbiorecreccetcoxcrudenele<-coxph(Surv(rectime,rec)~nelevated,data=drectal)


rfsbiorecreccetcoxneleadj<-coxph(Surv(rectime,rec)~nelevated+age+sex+side,data=drectal)

rfsbiorecreccetcoxcrudenele%>%
  tbl_regression(exponentiate = T,label=nelevated~"Number of elevated markers")%>%
  as_gt() %>% 
  tab_header(title = "Recurrence-free survival Cox regression univariate N elevated in BIOREC+RECCET")

rfsbiorecreccetcoxneleadj%>%
  tbl_regression(exponentiate = T,label=c(nelevated~"Number of elevated markers",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Recurrence-free survival Cox regression multivariate model N elevated in BIOREC+RECCET")


#Cox regression models for univariate and multivariate RFS n elevated REBECCA


rfsrebeccacoxcrudenele<-coxph(Surv(rectime,rec)~nelevated,data=subset(rebdnew, proname=="REBECCA"))

rfsrebeccacoxneleadj<-coxph(Surv(rectime,rec)~nelevated+age+sex+side,data=subset(rebdnew, proname=="REBECCA"))

rfsrebeccacoxcrudenele%>%
  tbl_regression(exponentiate = T,label=nelevated~"Number of elevated markers")%>%
  as_gt() %>% 
  tab_header(title = "Recurrence-free survival Cox regression univariate N elevated in REBECCA")

rfsrebeccacoxneleadj%>%
  tbl_regression(exponentiate = T,label=c(nelevated~"Number of elevated markers",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Recurrence-free survival Cox regression multivariate model N elevated in REBECCA")


#Cox regression models for univariate and multivariate n elevated OS

#Cox regression models for univariate and multivariate OS n elevated HAI 1


oshai1coxcrudenele<-coxph(Surv(deathtime,death)~nelevated,data=subset(dnew, proname=="HAI1"))

oshai1coxneleadj<-coxph(Surv(deathtime,death)~nelevated+age+sex+side,data=subset(dnew, proname=="HAI1"))

oshai1coxcrudenele%>%
  tbl_regression(exponentiate = T,label=nelevated~"Number of elevated markers")%>%
  as_gt() %>% 
  tab_header(title = "Overall survival Cox regression univariate N elevated in HAI 1")

oshai1coxneleadj%>%
  tbl_regression(exponentiate = T,label=c(nelevated~"Number of elevated markers",age~"Age",sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression multivariate model N elevated in HAI 1")


#Cox regression models for univariate and multivariate OS n elevated HAI 2


oshai2coxcrudenele<-coxph(Surv(deathtime,death)~nelevated,data=subset(dnew, proname=="HAI2"))

oshai2coxneleadj<-coxph(Surv(deathtime,death)~nelevated+age+sex+side,data=subset(dnew, proname=="HAI2"))

oshai2coxcrudenele%>%
  tbl_regression(exponentiate = T,label=nelevated~"Number of elevated markers")%>%
  as_gt() %>% 
  tab_header(title = "Overall survival Cox regression univariate N elevated in HAI 2")

oshai2coxneleadj%>%
  tbl_regression(exponentiate = T,label=c(nelevated~"Number of elevated markers",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression multivariate model N elevated in HAI 2")


#Cox regression models for univariate and multivariate OS n elevated HAI 1+2

oshai12coxcrudenele<-coxph(Surv(deathtime,death)~nelevated,data=dhai)

oshai12coxneleadj<-coxph(Surv(deathtime,death)~nelevated+age+sex+side,data=dhai)

oshai12coxcrudenele%>%
  tbl_regression(exponentiate = T,label=nelevated~"Number of elevated markers")%>%
  as_gt() %>% 
  tab_header(title = "Overall survival Cox regression univariate N elevated in HAI 1+2")

oshai12coxneleadj%>%
  tbl_regression(exponentiate = T,label=c(nelevated~"Number of elevated markers",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression multivariate model N elevated in HAI 1+2")


#Cox regression models for univariate and multivariate OS n elevated Biweekly

osbiweeklycoxcrudenele<-coxph(Surv(deathtime,death)~nelevated,data=subset(dnew, proname=="Biweekly"))


osbiweeklycoxneleadj<-coxph(Surv(deathtime,death)~nelevated+age+sex+side,data=subset(dnew, proname=="Biweekly"))

osbiweeklycoxcrudenele%>%
  tbl_regression(exponentiate = T,label=nelevated~"Number of elevated markers")%>%
  as_gt() %>% 
  tab_header(title = "Overall survival Cox regression univariate N elevated in Biweekly")

osbiweeklycoxneleadj%>%
  tbl_regression(exponentiate = T,label=c(nelevated~"Number of elevated markers",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression multivariate model N elevated in Biweekly")

#Cox regression models for univariate and multivariate OS n elevated XELOX

osxeloxcoxcrudenele<-coxph(Surv(deathtime,death)~nelevated,data=subset(dnew, proname=="XELOX"))


osxeloxcoxneleadj<-coxph(Surv(deathtime,death)~nelevated+age+sex+side,data=subset(dnew, proname=="XELOX"))

osxeloxcoxcrudenele%>%
  tbl_regression(exponentiate = T,label=nelevated~"Number of elevated markers")%>%
  as_gt() %>% 
  tab_header(title = "Overall survival Cox regression univariate N elevated in XELOX")

osxeloxcoxneleadj%>%
  tbl_regression(exponentiate = T,label=c(nelevated~"Number of elevated markers",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression multivariate model N elevated in XELOX")

#Cox regression models for univariate and multivariate OS n elevated ICE


osicecoxcrudenele<-coxph(Surv(deathtime,death)~nelevated,data=subset(dnew, proname=="ICE"))


osicecoxneleadj<-coxph(Surv(deathtime,death)~nelevated+age+sex+side,data=subset(dnew, proname=="ICE"))

osicecoxcrudenele%>%
  tbl_regression(exponentiate = T,label=nelevated~"Number of elevated markers")%>%
  as_gt() %>% 
  tab_header(title = "Overall survival Cox regression univariate N elevated in ICE")

osicecoxneleadj%>%
  tbl_regression(exponentiate = T,label=c(nelevated~"Number of elevated markers",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression multivariate model N elevated in ICE")


#Cox regression models for univariate and multivariate OS n elevated BIOREC


osbioreccoxcrudenele<-coxph(Surv(deathtime,death)~nelevated,data=subset(dnew, proname=="BIOREC"))

osbioreccoxneleadj<-coxph(Surv(deathtime,death)~nelevated+age+sex+side,data=subset(dnew, proname=="BIOREC"))

osbioreccoxcrudenele%>%
  tbl_regression(exponentiate = T,label=nelevated~"Number of elevated markers")%>%
  as_gt() %>% 
  tab_header(title = "Overall survival Cox regression univariate N elevated in BIOREC")

osbioreccoxneleadj%>%
  tbl_regression(exponentiate = T,label=c(nelevated~"Number of elevated markers",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression multivariate model N elevated in BIOREC")

#Cox regression models for univariate and multivariate OS n elevated RECCET

osreccetcoxcrudenele<-coxph(Surv(deathtime,death)~nelevated,data=subset(dnew, proname=="RECCET"))


osreccetcoxneleadj<-coxph(Surv(deathtime,death)~nelevated+age+sex+side,data=subset(dnew, proname=="RECCET"))

osreccetcoxcrudenele%>%
  tbl_regression(exponentiate = T,label=nelevated~"Number of elevated markers")%>%
  as_gt() %>% 
  tab_header(title = "Overall survival Cox regression univariate N elevated in RECCET")

osreccetcoxneleadj%>%
  tbl_regression(exponentiate = T,label=c(nelevated~"Number of elevated markers",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression multivariate model N elevated in RECCET")


#Cox regression models for univariate and multivariate OS n elevated BIOREC+RECCET


osbiorecreccetcoxcrudenele<-coxph(Surv(deathtime,death)~nelevated,data=drectal)


osbiorecreccetcoxneleadj<-coxph(Surv(deathtime,death)~nelevated+age+sex+side,data=drectal)

osbiorecreccetcoxcrudenele%>%
  tbl_regression(exponentiate = T,label=nelevated~"Number of elevated markers")%>%
  as_gt() %>% 
  tab_header(title = "Overall survival Cox regression univariate N elevated in BIOREC+RECCET")

osbiorecreccetcoxneleadj%>%
  tbl_regression(exponentiate = T,label=c(nelevated~"Number of elevated markers",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression multivariate model N elevated in BIOREC+RECCET")



#Cox regression models for univariate and multivariate OS n elevated REBECCA

osrebeccacoxcrudenele<-coxph(Surv(deathtime,death)~nelevated,data=subset(rebdnew, proname=="REBECCA"))


osrebeccacoxneleadj<-coxph(Surv(deathtime,death)~nelevated+age+sex+side,data=subset(rebdnew, proname=="REBECCA"))

osrebeccacoxcrudenele%>%
  tbl_regression(exponentiate = T,label=nelevated~"Number of elevated markers")%>%
  as_gt() %>% 
  tab_header(title = "Overall survival Cox regression univariate N elevated in REBECCA")

osrebeccacoxneleadj%>%
  tbl_regression(exponentiate = T,label=c(nelevated~"Number of elevated markers",age~"Age",
                                          sex~"Sex",side~"Side"))%>%
  as_gt()%>% 
  tab_header(title = "Overall survival Cox regression multivariate model N elevated in REBECCA")

#Assumptions proportional hazards
#Proportional hazards PFS HAI 1

test.phpfshai1 <- cox.zph(pfshai1coxadj)
test.phpfshai1
ggcoxzph(test.phpfshai1)

#Proportional hazards PFS HAI 2

test.phpfshai2 <- cox.zph(pfshai2coxadj)
test.phpfshai2
ggcoxzph(test.phpfshai2)
#Proportional hazards PFS Biweekly

test.phpfsbiweekly <- cox.zph(pfsbiweeklycoxadj)
test.phpfsbiweekly
ggcoxzph(test.phpfsbiweekly)
#Proportional hazards PFS XELOX

test.phpfsxelox <- cox.zph(pfsxeloxcoxadj)
test.phpfsxelox
ggcoxzph(test.phpfsxelox)
#Proportional hazards PFS ICE

test.phpfsice <- cox.zph(pfsicecoxadj)
test.phpfsice
ggcoxzph(test.phpfsice)
#Proportional hazards RFS BIOREC

test.phrfsbiorec <- cox.zph(rfsbioreccoxadj)
test.phrfsbiorec
ggcoxzph(test.phrfsbiorec)
#Proportional hazards RFS RECCET

test.phrfsreccet <- cox.zph(rfsreccetcoxadj)
test.phrfsreccet
ggcoxzph(test.phrfsreccet)
#Proportional hazards RFS REBECCA

test.phrfsrebecca <- cox.zph(rfsrebeccacoxadj)
test.phrfsrebecca
ggcoxzph(test.phrfsrebecca)
#Proportional hazards OS HAI 1

test.phoshai1 <- cox.zph(oshai1coxadj)
test.phoshai1
ggcoxzph(test.phoshai1)
#Proportional hazards OS HAI 2

test.phoshai2 <- cox.zph(oshai2coxadj)
test.phoshai2
ggcoxzph(test.phoshai2)
#Proportional hazards OS Biweekly

test.phosbiweekly <- cox.zph(osbiweeklycoxadj)
test.phosbiweekly
ggcoxzph(test.phosbiweekly)
#Proportional hazards OS XELOX

test.phosxelox <- cox.zph(osxeloxcoxadj)
test.phosxelox
ggcoxzph(test.phosxelox)
#Proportional hazards OS ICE

test.phosice <- cox.zph(osicecoxadj)
test.phosice
ggcoxzph(test.phosice)
#Proportional hazards OS BIOREC

test.phosbiorec <- cox.zph(osbioreccoxadj)
test.phosbiorec
ggcoxzph(test.phosbiorec)
#Proportional hazards OS RECCET
test.phosreccet <- cox.zph(osreccetcoxadj)
test.phosreccet
ggcoxzph(test.phosreccet)
#Proportional hazards OS REBECCA

test.phosrebecca <- cox.zph(osrebeccacoxadj)
test.phosrebecca
ggcoxzph(test.phosrebecca)

#Testing influence of outliers PFS

#HAI 1 PFS outliers
ggcoxdiagnostics(pfshai1coxadj, type = "dfbeta",
                 linear.predictions = FALSE, ggtheme = theme_bw())
ggcoxdiagnostics(pfshai1coxadj, type = "deviance",
                 linear.predictions = FALSE, ggtheme = theme_bw())

#HAI 2 PFS outliers
ggcoxdiagnostics(pfshai2coxadj, type = "dfbeta",
                 linear.predictions = FALSE, ggtheme = theme_bw())
ggcoxdiagnostics(pfshai2coxadj, type = "deviance",
                 linear.predictions = FALSE, ggtheme = theme_bw())

#Biweekly PFS outliers
ggcoxdiagnostics(pfsbiweeklycoxadj, type = "dfbeta",
                 linear.predictions = FALSE, ggtheme = theme_bw())
ggcoxdiagnostics(pfsbiweeklycoxadj, type = "deviance",
                 linear.predictions = FALSE, ggtheme = theme_bw())

#XELOX PFS outliers
ggcoxdiagnostics(pfsxeloxcoxadj, type = "dfbeta",
                 linear.predictions = FALSE, ggtheme = theme_bw())
ggcoxdiagnostics(pfsxeloxcoxadj, type = "deviance",
                 linear.predictions = FALSE, ggtheme = theme_bw())

#ICE PFS outliers
ggcoxdiagnostics(pfsicecoxadj, type = "dfbeta",
                 linear.predictions = FALSE, ggtheme = theme_bw())
ggcoxdiagnostics(pfsicecoxadj, type = "deviance",
                 linear.predictions = FALSE, ggtheme = theme_bw())

#BIOREC RFS outliers
ggcoxdiagnostics(rfsbioreccoxadj, type = "dfbeta",
                 linear.predictions = FALSE, ggtheme = theme_bw())
ggcoxdiagnostics(rfsbioreccoxadj, type = "deviance",
                 linear.predictions = FALSE, ggtheme = theme_bw())

#RECCET RFS outliers
ggcoxdiagnostics(rfsreccetcoxadj, type = "dfbeta",
                 linear.predictions = FALSE, ggtheme = theme_bw())
ggcoxdiagnostics(rfsreccetcoxadj, type = "deviance",
                 linear.predictions = FALSE, ggtheme = theme_bw())

#REBECCA RFS outliers
ggcoxdiagnostics(rfsrebeccacoxadj, type = "dfbeta",
                 linear.predictions = FALSE, ggtheme = theme_bw())
ggcoxdiagnostics(rfsrebeccacoxadj, type = "deviance",
                 linear.predictions = FALSE, ggtheme = theme_bw())


#Testing influence of outliers OS

#HAI 1 OS outliers
ggcoxdiagnostics(oshai1coxadj, type = "dfbeta",
                 linear.predictions = FALSE, ggtheme = theme_bw())
ggcoxdiagnostics(oshai1coxadj, type = "deviance",
                 linear.predictions = FALSE, ggtheme = theme_bw())

#HAI 2 OS outliers
ggcoxdiagnostics(oshai2coxadj, type = "dfbeta",
                 linear.predictions = FALSE, ggtheme = theme_bw())
ggcoxdiagnostics(oshai2coxadj, type = "deviance",
                 linear.predictions = FALSE, ggtheme = theme_bw())

#Biweekly OS outliers
ggcoxdiagnostics(osbiweeklycoxadj, type = "dfbeta",
                 linear.predictions = FALSE, ggtheme = theme_bw())
ggcoxdiagnostics(osbiweeklycoxadj, type = "deviance",
                 linear.predictions = FALSE, ggtheme = theme_bw())

#XELOX OS outliers
ggcoxdiagnostics(osxeloxcoxadj, type = "dfbeta",
                 linear.predictions = FALSE, ggtheme = theme_bw())
ggcoxdiagnostics(osxeloxcoxadj, type = "deviance",
                 linear.predictions = FALSE, ggtheme = theme_bw())

#ICE OS outliers
ggcoxdiagnostics(osicecoxadj, type = "dfbeta",
                 linear.predictions = FALSE, ggtheme = theme_bw())
ggcoxdiagnostics(osicecoxadj, type = "deviance",
                 linear.predictions = FALSE, ggtheme = theme_bw())

#BIOREC OS outliers
ggcoxdiagnostics(osbioreccoxadj, type = "dfbeta",
                 linear.predictions = FALSE, ggtheme = theme_bw())
ggcoxdiagnostics(osbioreccoxadj, type = "deviance",
                 linear.predictions = FALSE, ggtheme = theme_bw())

#RECCET OS outliers
ggcoxdiagnostics(osreccetcoxadj, type = "dfbeta",
                 linear.predictions = FALSE, ggtheme = theme_bw())
ggcoxdiagnostics(osreccetcoxadj, type = "deviance",
                 linear.predictions = FALSE, ggtheme = theme_bw())

#REBECCA OS outliers
ggcoxdiagnostics(osrebeccacoxadj, type = "dfbeta",
                 linear.predictions = FALSE, ggtheme = theme_bw())
ggcoxdiagnostics(osrebeccacoxadj, type = "deviance",
                 linear.predictions = FALSE, ggtheme = theme_bw())


#Testing non-linearity PFS

#Make complete case for CEA dataset
dnewcccea <- dnew[complete.cases(dnew[ , c("log2cea")]), ] 
#Make complete case for CA19-9 dataset
dnewccca199 <- dnew[complete.cases(dnew[ , c("log2ca199")]), ] 

#Make complete case for CEA dataset in REBECCA cohort
rebdnewcccea <- rebdnew[complete.cases(rebdnew[ , c("log2cea")]), ] 
#Make complete case for CA19-9 dataset in REBECCA cohort
rebdnewccca199 <- rebdnew[complete.cases(rebdnew[ , c("log2ca199")]), ] 

# Non-linearity in HAI 1 CEA PFS
nlpfslog2ceahai1<-coxph(Surv(progtime, prog) ~ log2cea+I(log2cea^2), data = subset(dnewcccea, proname=="HAI1"))
nlpfslog2ceahai1
ggcoxfunctional(nlpfslog2ceahai1, data = dnewcccea)

# Non-linearity in HAI 1 CA19-9 PFS
nlpfslog2ca199hai1<-coxph(Surv(progtime, prog) ~ log2ca199+I(log2ca199^2), data = subset(dnewccca199, proname=="HAI1"))
nlpfslog2ca199hai1
ggcoxfunctional(nlpfslog2ca199hai1, data = dnewccca199)

# Non-linearity in HAI 2 CEA PFS
nlpfslog2ceahai2<-coxph(Surv(progtime, prog) ~ log2cea+I(log2cea^2), data = subset(dnewcccea, proname=="HAI2"))
nlpfslog2ceahai2
ggcoxfunctional(nlpfslog2ceahai2, data = dnewcccea)

# Non-linearity in HAI 2 CA19-9 PFS
nlpfslog2ca199hai2<-coxph(Surv(progtime, prog) ~ log2ca199+I(log2ca199^2), data = subset(dnewccca199, proname=="HAI2"))
nlpfslog2ca199hai2
ggcoxfunctional(nlpfslog2ca199hai2, data = dnewccca199)

# Non-linearity in Biweekly CEA PFS
nlpfslog2ceahai1<-coxph(Surv(progtime, prog) ~ log2cea+I(log2cea^2), data = subset(dnewcccea, proname=="Biweekly"))
nlpfslog2ceahai1
ggcoxfunctional(nlpfslog2ceahai1, data = dnewcccea)

# Non-linearity in Biweekly CA19-9 PFS
nlpfslog2ca199hai1<-coxph(Surv(progtime, prog) ~ log2ca199+I(log2ca199^2), data = subset(dnewccca199, proname=="Biweekly"))
nlpfslog2ca199hai1
ggcoxfunctional(nlpfslog2ca199hai1, data = dnewccca199)

# Non-linearity in XELOX CEA PFS
nlpfslog2ceahai1<-coxph(Surv(progtime, prog) ~ log2cea+I(log2cea^2), data = subset(dnewcccea, proname=="XELOX"))
nlpfslog2ceahai1
ggcoxfunctional(nlpfslog2ceahai1, data = dnewcccea)

# Non-linearity in XELOX CA19-9 PFS
nlpfslog2ca199hai1<-coxph(Surv(progtime, prog) ~ log2ca199+I(log2ca199^2), data = subset(dnewccca199, proname=="XELOX"))
nlpfslog2ca199hai1
ggcoxfunctional(nlpfslog2ca199hai1, data = dnewccca199)

# Non-linearity in ICE CEA PFS
nlpfslog2ceahai1<-coxph(Surv(progtime, prog) ~ log2cea+I(log2cea^2), data = subset(dnewcccea, proname=="ICE"))
nlpfslog2ceahai1
ggcoxfunctional(nlpfslog2ceahai1, data = dnewcccea)

# Non-linearity in ICE CA19-9 PFS
nlpfslog2ca199hai1<-coxph(Surv(progtime, prog) ~ log2ca199+I(log2ca199^2), data = subset(dnewccca199, proname=="ICE"))
nlpfslog2ca199hai1
ggcoxfunctional(nlpfslog2ca199hai1, data = dnewccca199)

# Non-linearity in BIOREC CEA PFS
nlrfslog2ceahai1<-coxph(Surv(rectime, rec) ~ log2cea+I(log2cea^2), data = subset(dnewcccea, proname=="BIOREC"))
nlrfslog2ceahai1
ggcoxfunctional(nlrfslog2ceahai1, data = dnewcccea)

# Non-linearity in BIOREC CA19-9 PFS
nlrfslog2ca199hai1<-coxph(Surv(rectime, rec) ~ log2ca199+I(log2ca199^2), data = subset(dnewccca199, proname=="BIOREC"))
nlrfslog2ca199hai1
ggcoxfunctional(nlrfslog2ca199hai1, data = dnewccca199)

# Non-linearity in RECCET CEA PFS
nlrfslog2ceahai1<-coxph(Surv(rectime, rec) ~ log2cea+I(log2cea^2), data = subset(dnewcccea, proname=="RECCET"))
nlrfslog2ceahai1
ggcoxfunctional(nlrfslog2ceahai1, data = dnewcccea)

# Non-linearity in RECCET CA19-9 PFS
nlrfslog2ca199hai1<-coxph(Surv(rectime, rec) ~ log2ca199+I(log2ca199^2), data = subset(dnewccca199, proname=="RECCET"))
nlrfslog2ca199hai1
ggcoxfunctional(nlrfslog2ca199hai1, data = dnewccca199)

# Non-linearity in REBECCA CEA PFS
nlrfslog2ceahai1<-coxph(Surv(rectime, rec) ~ log2cea+I(log2cea^2), data = rebdnewcccea)
nlrfslog2ceahai1
ggcoxfunctional(nlrfslog2ceahai1, data = rebdnewcccea)

# Non-linearity in REBECCA CA19-9 PFS
nlrfslog2ca199hai1<-coxph(Surv(rectime, rec) ~ log2ca199+I(log2ca199^2), data = rebdnewccca199)
nlrfslog2ca199hai1
ggcoxfunctional(nlrfslog2ca199hai1, data = rebdnewccca199)


#Non-linearity in OS

# Non-linearity in HAI 1 CEA OS
nloslog2ceahai1<-coxph(Surv(deathtime, death) ~ log2cea+I(log2cea^2), data = subset(dnewcccea, proname=="HAI1"))
nloslog2ceahai1
ggcoxfunctional(nloslog2ceahai1, data = dnewcccea)

# Non-linearity in HAI 1 CA19-9 OS
nloslog2ca199hai1<-coxph(Surv(deathtime, death) ~ log2ca199+I(log2ca199^2), data = subset(dnewccca199, proname=="HAI1"))
nloslog2ca199hai1
ggcoxfunctional(nloslog2ca199hai1, data = dnewccca199)

# Non-linearity in HAI 2 CEA OS
nloslog2ceahai2<-coxph(Surv(deathtime, death) ~ log2cea+I(log2cea^2), data = subset(dnewcccea, proname=="HAI2"))
nloslog2ceahai2
ggcoxfunctional(nloslog2ceahai2, data = dnewcccea)

# Non-linearity in HAI 2 CA19-9 OS
nloslog2ca199hai2<-coxph(Surv(deathtime, death) ~ log2ca199+I(log2ca199^2), data = subset(dnewccca199, proname=="HAI2"))
nloslog2ca199hai2
ggcoxfunctional(nloslog2ca199hai2, data = dnewccca199)

# Non-linearity in Biweekly CEA OS
nloslog2ceabiweekly<-coxph(Surv(deathtime, death) ~ log2cea+I(log2cea^2), data = subset(dnewcccea, proname=="Biweekly"))
nloslog2ceabiweekly
ggcoxfunctional(nloslog2ceabiweekly, data = dnewcccea)

# Non-linearity in Biweekly CA19-9 OS
nloslog2ca199biweekly<-coxph(Surv(deathtime, death) ~ log2ca199+I(log2ca199^2), data = subset(dnewccca199, proname=="Biweekly"))
nloslog2ca199biweekly
ggcoxfunctional(nloslog2ca199biweekly, data = dnewccca199)

# Non-linearity in XELOX CEA OS
nloslog2ceaxelox<-coxph(Surv(deathtime, death) ~ log2cea+I(log2cea^2), data = subset(dnewcccea, proname=="XELOX"))
nloslog2ceaxelox
ggcoxfunctional(nloslog2ceaxelox, data = dnewcccea)

# Non-linearity in XELOX CA19-9 OS
nloslog2ca199xelox<-coxph(Surv(deathtime, death) ~ log2ca199+I(log2ca199^2), data = subset(dnewccca199, proname=="XELOX"))
nloslog2ca199xelox
ggcoxfunctional(nloslog2ca199xelox, data = dnewccca199)

# Non-linearity in ICE CEA OS
nloslog2ceaice<-coxph(Surv(deathtime, death) ~ log2cea+I(log2cea^2), data = subset(dnewcccea, proname=="ICE"))
nloslog2ceaice
ggcoxfunctional(nloslog2ceaice, data = dnewcccea)

# Non-linearity in ICE CA19-9 OS
nloslog2ca199ice<-coxph(Surv(deathtime, death) ~ log2ca199+I(log2ca199^2), data = subset(dnewccca199, proname=="ICE"))
nloslog2ca199ice
ggcoxfunctional(nloslog2ca199ice, data = dnewccca199)

# Non-linearity in BIOREC CEA OS
nloslog2ceabiorec<-coxph(Surv(deathtime, death) ~ log2cea+I(log2cea^2), data = subset(dnewcccea, proname=="BIOREC"))
nloslog2ceabiorec
ggcoxfunctional(nloslog2ceabiorec, data = dnewcccea)

# Non-linearity in BIOREC CA19-9 OS
nloslog2ca199biorec<-coxph(Surv(deathtime, death) ~ log2ca199+I(log2ca199^2), data = subset(dnewccca199, proname=="BIOREC"))
nloslog2ca199biorec
ggcoxfunctional(nloslog2ca199biorec, data = dnewccca199)

# Non-linearity in RECCET CEA OS
nloslog2ceareccet<-coxph(Surv(deathtime, death) ~ log2cea+I(log2cea^2), data = subset(dnewcccea, proname=="RECCET"))
nloslog2ceareccet
ggcoxfunctional(nloslog2ceareccet, data = dnewcccea)

# Non-linearity in RECCET CA19-9 OS
nloslog2ca199reccet<-coxph(Surv(deathtime, death) ~ log2ca199+I(log2ca199^2), data = subset(dnewccca199, proname=="RECCET"))
nloslog2ca199reccet
ggcoxfunctional(nloslog2ca199reccet, data = dnewccca199)

# Non-linearity in REBECCA CEA OS
nloslog2cearebecca<-coxph(Surv(deathtime, death) ~ log2cea+I(log2cea^2), data = rebdnewcccea)
nloslog2cearebecca
ggcoxfunctional(nloslog2cearebecca, data = rebdnewcccea)

# Non-linearity in REBECCA CA19-9 OS
nloslog2ca199rebecca<-coxph(Surv(deathtime, death) ~ log2ca199+I(log2ca199^2), data = rebdnewccca199)
nloslog2ca199rebecca
ggcoxfunctional(nloslog2ca199rebecca, data = rebdnewccca199)

